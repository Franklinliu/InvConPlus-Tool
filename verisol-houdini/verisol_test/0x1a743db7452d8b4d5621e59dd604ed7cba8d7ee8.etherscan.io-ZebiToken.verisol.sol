pragma solidity ^0.5.10;

import "./VeriSolContracts.sol";

contract SafeMath {
    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a * b;
        require((a == 0) || ((c / a) == b));
        return c;
    }

    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {
        return a / b;
    }

    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a);
        return a - b;
    }

    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require((c >= a) && (c >= b));
        return c;
    }

    function safePower(uint a, uint b) internal pure returns (uint256) {
        uint256 c = a;
        for (uint i = 1; i < b; i++) {
            c = c * a;
        }
        return c;
    }
}

interface IToken {
    function transfer(address _to, uint256 _value) external returns (bool success);
}

contract ZebiToken is SafeMath {
    event Transfer(address indexed from, address indexed to, uint256 value);

    event Burn(address indexed from, uint256 value);

    event Approval(address indexed owner, address indexed spender, uint256 value);

    event SetPauseMint(bool pause);

    event SetOwner(address user);

    event SetTotalSupplyLimit(uint amount);

    event SetMinter(address minter);

    event SetBlacklist(address user, bool isBlacklist);

    event AcceptOwner(address user);

    event AcceptMinter(address user);

    string public name;
    string public symbol;
    uint8 public decimals;
    uint256 public totalSupply;
    address payable public owner;
    uint256 public totalSupplyLimit;
    bool public pauseMint;
    address public minter;
    address payable public ownerTemp;
    uint256 internal blocknumberLastAcceptOwner;
    uint256 internal blocknumberLastAcceptMinter;
    address public minterTemp;
    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;
    mapping(address => bool) public blacklist;

    constructor(uint256 initialSupply, string memory tokenName, string memory tokenSymbol) public {
        //Begin of assumptions
        VeriSol.AssumesEndingOfFunction(pauseMint==false);
        VeriSol.AssumesEndingOfFunction(totalSupply>0);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesEndingOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesEndingOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesEndingOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesEndingOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesEndingOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesEndingOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesEndingOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesEndingOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(totalSupply >= decimals);
        VeriSol.AssumesEndingOfFunction(totalSupply > decimals);
        VeriSol.AssumesEndingOfFunction(totalSupply != decimals);
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(ownerTemp != owner);
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(minterTemp != owner);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesEndingOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.AssumesEndingOfFunction(owner != minter);
        VeriSol.AssumesEndingOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesEndingOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesEndingOfFunction(totalSupplyLimit != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        //End of invariants
        balanceOf[msg.sender] = initialSupply;
        totalSupply = initialSupply;
        name = tokenName;
        symbol = tokenSymbol;
        decimals = 18;
        owner = msg.sender;
        uint256 tmp = 10 ** 18;
        totalSupplyLimit = 21000000 * tmp;
    }

    function transfer(address _to, uint256 _value) public returns (bool success) {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(minterTemp!=address(0));
        VeriSol.Requires(minter!=address(0));
        VeriSol.Requires(balanceOf[msg.sender]>0);
        VeriSol.Requires(totalSupply>0);
        VeriSol.Requires(totalSupply==103362782787699479722084);
        VeriSol.Requires(balanceOf[_to]==0);
        VeriSol.Requires(ownerTemp!=address(0));
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(pauseMint==false);
        VeriSol.Requires(_to!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Requires(_value>0);
        VeriSol.Requires(blocknumberLastAcceptMinter>0);
        VeriSol.Requires(blocknumberLastAcceptMinter==12117320);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)==103362782787699479722084);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires(blocknumberLastAcceptOwner>0);
        VeriSol.Requires(blocknumberLastAcceptOwner==12154464);
        VeriSol.Requires((minterTemp) == (minter));
        VeriSol.Requires((minterTemp) != (ownerTemp));
        VeriSol.Requires((minterTemp) != msg.sender);
        VeriSol.Requires((minterTemp) != _to);
        VeriSol.Requires((minterTemp) != (owner));
        VeriSol.Requires((minter) != (ownerTemp));
        VeriSol.Requires((minter) != msg.sender);
        VeriSol.Requires((minter) != _to);
        VeriSol.Requires((minter) != (owner));
        VeriSol.Requires((balanceOf[msg.sender]) <= (totalSupply));
        VeriSol.Requires((balanceOf[msg.sender]) < (totalSupply));
        VeriSol.Requires((balanceOf[msg.sender]) != (totalSupply));
        VeriSol.Requires((balanceOf[msg.sender]) >= (balanceOf[_to]));
        VeriSol.Requires((balanceOf[msg.sender]) > (balanceOf[_to]));
        VeriSol.Requires((balanceOf[msg.sender]) != (balanceOf[_to]));
        VeriSol.Requires((balanceOf[msg.sender]) <= (totalSupplyLimit));
        VeriSol.Requires((balanceOf[msg.sender]) < (totalSupplyLimit));
        VeriSol.Requires((balanceOf[msg.sender]) != (totalSupplyLimit));
        VeriSol.Requires((balanceOf[msg.sender]) >= _value);
        VeriSol.Requires((balanceOf[msg.sender]) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((balanceOf[msg.sender]) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((balanceOf[msg.sender]) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((balanceOf[msg.sender]) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((balanceOf[msg.sender]) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((balanceOf[msg.sender]) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((balanceOf[msg.sender]) >= (uint256(decimals)));
        VeriSol.Requires((balanceOf[msg.sender]) > (uint256(decimals)));
        VeriSol.Requires((balanceOf[msg.sender]) != (uint256(decimals)));
        VeriSol.Requires((balanceOf[msg.sender]) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((balanceOf[msg.sender]) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((balanceOf[msg.sender]) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) >= (balanceOf[_to]));
        VeriSol.Requires((totalSupply) > (balanceOf[_to]));
        VeriSol.Requires((totalSupply) != (balanceOf[_to]));
        VeriSol.Requires((totalSupply) <= (totalSupplyLimit));
        VeriSol.Requires((totalSupply) < (totalSupplyLimit));
        VeriSol.Requires((totalSupply) != (totalSupplyLimit));
        VeriSol.Requires((totalSupply) >= _value);
        VeriSol.Requires((totalSupply) > _value);
        VeriSol.Requires((totalSupply) != _value);
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (uint256(decimals)));
        VeriSol.Requires((totalSupply) > (uint256(decimals)));
        VeriSol.Requires((totalSupply) != (uint256(decimals)));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((balanceOf[_to]) <= (totalSupplyLimit));
        VeriSol.Requires((balanceOf[_to]) < (totalSupplyLimit));
        VeriSol.Requires((balanceOf[_to]) != (totalSupplyLimit));
        VeriSol.Requires((balanceOf[_to]) <= _value);
        VeriSol.Requires((balanceOf[_to]) < _value);
        VeriSol.Requires((balanceOf[_to]) != _value);
        VeriSol.Requires((balanceOf[_to]) <= (blocknumberLastAcceptMinter));
        VeriSol.Requires((balanceOf[_to]) < (blocknumberLastAcceptMinter));
        VeriSol.Requires((balanceOf[_to]) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((balanceOf[_to]) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((balanceOf[_to]) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((balanceOf[_to]) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((balanceOf[_to]) <= (uint256(decimals)));
        VeriSol.Requires((balanceOf[_to]) < (uint256(decimals)));
        VeriSol.Requires((balanceOf[_to]) != (uint256(decimals)));
        VeriSol.Requires((balanceOf[_to]) <= (blocknumberLastAcceptOwner));
        VeriSol.Requires((balanceOf[_to]) < (blocknumberLastAcceptOwner));
        VeriSol.Requires((balanceOf[_to]) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((ownerTemp) != msg.sender);
        VeriSol.Requires((ownerTemp) != _to);
        VeriSol.Requires((ownerTemp) != (owner));
        VeriSol.Requires(msg.sender != _to);
        VeriSol.Requires(msg.sender != (owner));
        VeriSol.Requires(_to != (owner));
        VeriSol.Requires((totalSupplyLimit) >= _value);
        VeriSol.Requires((totalSupplyLimit) > _value);
        VeriSol.Requires((totalSupplyLimit) != _value);
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) > (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) >= (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) > (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) != (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptOwner));
        VeriSol.Requires(_value >= (blocknumberLastAcceptMinter));
        VeriSol.Requires(_value > (blocknumberLastAcceptMinter));
        VeriSol.Requires(_value != (blocknumberLastAcceptMinter));
        VeriSol.Requires(_value <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires(_value < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires(_value != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires(_value >= (uint256(decimals)));
        VeriSol.Requires(_value > (uint256(decimals)));
        VeriSol.Requires(_value != (uint256(decimals)));
        VeriSol.Requires(_value >= (blocknumberLastAcceptOwner));
        VeriSol.Requires(_value > (blocknumberLastAcceptOwner));
        VeriSol.Requires(_value != (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) >= (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) > (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) <= (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) < (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(totalSupply==103362782787699479722084);
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(blocknumberLastAcceptMinter==12117320);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(balanceOf[_to]>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner==12154464);
        VeriSol.Ensures(minterTemp!=address(0));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)==103362782787699479722084);
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(minter!=address(0));
        VeriSol.Ensures(VeriSol.Old(minterTemp) != ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minter);
        VeriSol.Ensures(VeriSol.Old(minter) != ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != owner);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) < totalSupply);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != totalSupply);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) > blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) > balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= decimals);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) > decimals);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != decimals);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < totalSupply);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != totalSupply);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= decimals);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < decimals);
        VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != decimals);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minter);
        VeriSol.Ensures(msg.sender != ownerTemp);
        VeriSol.Ensures(msg.sender != minterTemp);
        VeriSol.Ensures(msg.sender != owner);
        VeriSol.Ensures(msg.sender != minter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply >= balanceOf[_to]);
        VeriSol.Ensures(totalSupply > balanceOf[_to]);
        VeriSol.Ensures(totalSupply != balanceOf[_to]);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= balanceOf[msg.sender]);
        VeriSol.Ensures(totalSupply > balanceOf[msg.sender]);
        VeriSol.Ensures(totalSupply != balanceOf[msg.sender]);
        VeriSol.Ensures(totalSupply >= _value);
        VeriSol.Ensures(totalSupply > _value);
        VeriSol.Ensures(totalSupply != _value);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= balanceOf[_to]);
        VeriSol.Ensures(blocknumberLastAcceptMinter < balanceOf[_to]);
        VeriSol.Ensures(blocknumberLastAcceptMinter != balanceOf[_to]);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter < blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter != blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != balanceOf[msg.sender]);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= _value);
        VeriSol.Ensures(blocknumberLastAcceptMinter < _value);
        VeriSol.Ensures(blocknumberLastAcceptMinter != _value);
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(ownerTemp != _to);
        VeriSol.Ensures(ownerTemp != minterTemp);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(ownerTemp != VeriSol.Old(owner));
        VeriSol.Ensures(ownerTemp != minter);
        VeriSol.Ensures(_to != minterTemp);
        VeriSol.Ensures(_to != owner);
        VeriSol.Ensures(_to != minter);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != balanceOf[_to]);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != decimals);
        VeriSol.Ensures(balanceOf[_to] >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(balanceOf[_to] > blocknumberLastAcceptOwner);
        VeriSol.Ensures(balanceOf[_to] != blocknumberLastAcceptOwner);
        VeriSol.Ensures(balanceOf[_to] <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(balanceOf[_to] < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(balanceOf[_to] != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(balanceOf[_to] >= balanceOf[msg.sender]);
        VeriSol.Ensures(balanceOf[_to] > balanceOf[msg.sender]);
        VeriSol.Ensures(balanceOf[_to] != balanceOf[msg.sender]);
        VeriSol.Ensures(balanceOf[_to] == _value);
        VeriSol.Ensures(balanceOf[_to] >= _value);
        VeriSol.Ensures(balanceOf[_to] <= _value);
        VeriSol.Ensures(balanceOf[_to] >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(balanceOf[_to] > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(balanceOf[_to] != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(balanceOf[_to] <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(balanceOf[_to] < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(balanceOf[_to] != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(balanceOf[_to] >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(balanceOf[_to] > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(balanceOf[_to] != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(balanceOf[_to] <= totalSupplyLimit);
        VeriSol.Ensures(balanceOf[_to] < totalSupplyLimit);
        VeriSol.Ensures(balanceOf[_to] != totalSupplyLimit);
        VeriSol.Ensures(balanceOf[_to] >= decimals);
        VeriSol.Ensures(balanceOf[_to] > decimals);
        VeriSol.Ensures(balanceOf[_to] != decimals);
        VeriSol.Ensures(balanceOf[_to] >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(balanceOf[_to] > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(balanceOf[_to] != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != balanceOf[msg.sender]);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= _value);
        VeriSol.Ensures(blocknumberLastAcceptOwner < _value);
        VeriSol.Ensures(blocknumberLastAcceptOwner != _value);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(minterTemp != VeriSol.Old(owner));
        VeriSol.Ensures(minterTemp == minter);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= _value);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > _value);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != _value);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(balanceOf[msg.sender] <= _value);
        VeriSol.Ensures(balanceOf[msg.sender] < _value);
        VeriSol.Ensures(balanceOf[msg.sender] != _value);
        VeriSol.Ensures(balanceOf[msg.sender] != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(balanceOf[msg.sender] <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(balanceOf[msg.sender] < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(balanceOf[msg.sender] != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(balanceOf[msg.sender] != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(balanceOf[msg.sender] <= totalSupplyLimit);
        VeriSol.Ensures(balanceOf[msg.sender] < totalSupplyLimit);
        VeriSol.Ensures(balanceOf[msg.sender] != totalSupplyLimit);
        VeriSol.Ensures(balanceOf[msg.sender] != decimals);
        VeriSol.Ensures(balanceOf[msg.sender] != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(_value <= totalSupplyLimit);
        VeriSol.Ensures(_value < totalSupplyLimit);
        VeriSol.Ensures(_value != totalSupplyLimit);
        VeriSol.Ensures(_value >= decimals);
        VeriSol.Ensures(_value > decimals);
        VeriSol.Ensures(_value != decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) >= decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) > decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(VeriSol.Old(owner) != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupplyLimit >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals < VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require((_to != address(0x0)) && (!blacklist[msg.sender]));
        require(_value >= 0);
        require(balanceOf[msg.sender] >= _value);
        require(safeAdd(balanceOf[_to], _value) >= balanceOf[_to]);
        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], _value);
        balanceOf[_to] = safeAdd(balanceOf[_to], _value);
        emit Transfer(msg.sender, _to, _value);
        return true;
    }

    function approve(address _spender, uint256 _value) public returns (bool success) {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(totalSupply>0);
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(pauseMint==false);
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Requires(_value>0);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(_spender!=address(0));
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((minterTemp) == (minter));
        VeriSol.Requires((minterTemp) != msg.sender);
        VeriSol.Requires((minterTemp) != _spender);
        VeriSol.Requires((minterTemp) != (owner));
        VeriSol.Requires((minter) != msg.sender);
        VeriSol.Requires((minter) != _spender);
        VeriSol.Requires((minter) != (owner));
        VeriSol.Requires((totalSupply) != (allowance[msg.sender][_spender]));
        VeriSol.Requires((totalSupply) <= (totalSupplyLimit));
        VeriSol.Requires((totalSupply) < (totalSupplyLimit));
        VeriSol.Requires((totalSupply) != (totalSupplyLimit));
        VeriSol.Requires((totalSupply) <= _value);
        VeriSol.Requires((totalSupply) < _value);
        VeriSol.Requires((totalSupply) != _value);
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (uint256(decimals)));
        VeriSol.Requires((totalSupply) > (uint256(decimals)));
        VeriSol.Requires((totalSupply) != (uint256(decimals)));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((ownerTemp) != msg.sender);
        VeriSol.Requires((ownerTemp) != _spender);
        VeriSol.Requires((ownerTemp) != (owner));
        VeriSol.Requires(msg.sender != _spender);
        VeriSol.Requires((allowance[msg.sender][_spender]) != (totalSupplyLimit));
        VeriSol.Requires((allowance[msg.sender][_spender]) != _value);
        VeriSol.Requires((allowance[msg.sender][_spender]) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((allowance[msg.sender][_spender]) != (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) <= _value);
        VeriSol.Requires((totalSupplyLimit) < _value);
        VeriSol.Requires((totalSupplyLimit) != _value);
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) > (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) >= (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) > (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) != (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptOwner));
        VeriSol.Requires(_value >= (blocknumberLastAcceptMinter));
        VeriSol.Requires(_value > (blocknumberLastAcceptMinter));
        VeriSol.Requires(_value != (blocknumberLastAcceptMinter));
        VeriSol.Requires(_value >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires(_value > (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires(_value != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires(_value >= (uint256(decimals)));
        VeriSol.Requires(_value > (uint256(decimals)));
        VeriSol.Requires(_value != (uint256(decimals)));
        VeriSol.Requires(_value >= (blocknumberLastAcceptOwner));
        VeriSol.Requires(_value > (blocknumberLastAcceptOwner));
        VeriSol.Requires(_value != (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Requires(_spender != (owner));
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(allowance[msg.sender][_spender]>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minter);
        VeriSol.Ensures(VeriSol.Old(minter) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != owner);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= allowance[msg.sender][_spender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) < allowance[msg.sender][_spender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != allowance[msg.sender][_spender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != decimals);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != owner);
        VeriSol.Ensures(msg.sender != ownerTemp);
        VeriSol.Ensures(msg.sender != minterTemp);
        VeriSol.Ensures(msg.sender != minter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != VeriSol.Old(allowance[msg.sender][_spender]));
        VeriSol.Ensures(totalSupply <= allowance[msg.sender][_spender]);
        VeriSol.Ensures(totalSupply < allowance[msg.sender][_spender]);
        VeriSol.Ensures(totalSupply != allowance[msg.sender][_spender]);
        VeriSol.Ensures(totalSupply <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= _value);
        VeriSol.Ensures(totalSupply < _value);
        VeriSol.Ensures(totalSupply != _value);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= allowance[msg.sender][_spender]);
        VeriSol.Ensures(blocknumberLastAcceptMinter < allowance[msg.sender][_spender]);
        VeriSol.Ensures(blocknumberLastAcceptMinter != allowance[msg.sender][_spender]);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= _value);
        VeriSol.Ensures(blocknumberLastAcceptMinter < _value);
        VeriSol.Ensures(blocknumberLastAcceptMinter != _value);
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(ownerTemp != _spender);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(ownerTemp != VeriSol.Old(owner));
        VeriSol.Ensures(VeriSol.Old(allowance[msg.sender][_spender]) <= allowance[msg.sender][_spender]);
        VeriSol.Ensures(VeriSol.Old(allowance[msg.sender][_spender]) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(allowance[msg.sender][_spender]) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(allowance[msg.sender][_spender]) != decimals);
        VeriSol.Ensures(allowance[msg.sender][_spender] >= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(allowance[msg.sender][_spender] > VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(allowance[msg.sender][_spender] != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(allowance[msg.sender][_spender] >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(allowance[msg.sender][_spender] > blocknumberLastAcceptOwner);
        VeriSol.Ensures(allowance[msg.sender][_spender] != blocknumberLastAcceptOwner);
        VeriSol.Ensures(allowance[msg.sender][_spender] >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(allowance[msg.sender][_spender] > VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(allowance[msg.sender][_spender] != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(allowance[msg.sender][_spender] >= _value);
        VeriSol.Ensures(allowance[msg.sender][_spender] >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(allowance[msg.sender][_spender] > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(allowance[msg.sender][_spender] != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(allowance[msg.sender][_spender] >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(allowance[msg.sender][_spender] > VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(allowance[msg.sender][_spender] != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(allowance[msg.sender][_spender] >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(allowance[msg.sender][_spender] > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(allowance[msg.sender][_spender] != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(allowance[msg.sender][_spender] >= totalSupplyLimit);
        VeriSol.Ensures(allowance[msg.sender][_spender] > totalSupplyLimit);
        VeriSol.Ensures(allowance[msg.sender][_spender] != totalSupplyLimit);
        VeriSol.Ensures(allowance[msg.sender][_spender] >= decimals);
        VeriSol.Ensures(allowance[msg.sender][_spender] > decimals);
        VeriSol.Ensures(allowance[msg.sender][_spender] != decimals);
        VeriSol.Ensures(allowance[msg.sender][_spender] >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(allowance[msg.sender][_spender] > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(allowance[msg.sender][_spender] != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= _value);
        VeriSol.Ensures(blocknumberLastAcceptOwner < _value);
        VeriSol.Ensures(blocknumberLastAcceptOwner != _value);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(minterTemp != _spender);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(minterTemp != VeriSol.Old(owner));
        VeriSol.Ensures(minterTemp == minter);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= _value);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < _value);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != _value);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(_value >= totalSupplyLimit);
        VeriSol.Ensures(_value > totalSupplyLimit);
        VeriSol.Ensures(_value != totalSupplyLimit);
        VeriSol.Ensures(_value >= decimals);
        VeriSol.Ensures(_value > decimals);
        VeriSol.Ensures(_value != decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(_spender != owner);
        VeriSol.Ensures(_spender != minter);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(VeriSol.Old(owner) != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupplyLimit >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require((_to != address(0x0)) && (!blacklist[_from]));
        require(_value >= 0);
        require(balanceOf[_from] >= _value);
        require(safeAdd(balanceOf[_to], _value) >= balanceOf[_to]);
        require(_value <= allowance[_from][msg.sender]);
        balanceOf[_from] = safeSub(balanceOf[_from], _value);
        balanceOf[_to] = safeAdd(balanceOf[_to], _value);
        allowance[_from][msg.sender] = safeSub(allowance[_from][msg.sender], _value);
        emit Transfer(_from, _to, _value);
        return true;
    }

    function burn(uint256 _value) public returns (bool success) {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(balanceOf[msg.sender] >= _value);
        require(_value > 0);
        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], _value);
        totalSupply = safeSub(totalSupply, _value);
        emit Burn(msg.sender, _value);
        emit Transfer(msg.sender, address(0), _value);
        return true;
    }

    function mintToken(uint256 _mintedAmount) public returns (bool success) {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(((msg.sender == minter) && (!pauseMint)) && (safeAdd(totalSupply, _mintedAmount) <= totalSupplyLimit));
        balanceOf[msg.sender] = safeAdd(balanceOf[msg.sender], _mintedAmount);
        totalSupply = safeAdd(totalSupply, _mintedAmount);
        emit Transfer(address(0x0), msg.sender, _mintedAmount);
        return true;
    }

    function setPauseMint(bool _pause) public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(msg.sender == owner);
        pauseMint = _pause;
        emit SetPauseMint(_pause);
    }

    function setMinter(address _minter) public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(minterTemp==address(0));
        VeriSol.Requires(minter==address(0));
        VeriSol.Requires(totalSupply>0);
        VeriSol.Requires(totalSupply==1000000000000000000);
        VeriSol.Requires(ownerTemp==address(0));
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(pauseMint==false);
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Requires(_minter!=address(0));
        VeriSol.Requires(blocknumberLastAcceptMinter==0);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)==1000000000000000000);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires(blocknumberLastAcceptOwner==0);
        VeriSol.Requires((minterTemp) == (minter));
        VeriSol.Requires((minterTemp) == (ownerTemp));
        VeriSol.Requires((minterTemp) != msg.sender);
        VeriSol.Requires((minterTemp) != _minter);
        VeriSol.Requires((minterTemp) != (owner));
        VeriSol.Requires((minter) == (ownerTemp));
        VeriSol.Requires((minter) != msg.sender);
        VeriSol.Requires((minter) != _minter);
        VeriSol.Requires((minter) != (owner));
        VeriSol.Requires((totalSupply) <= (totalSupplyLimit));
        VeriSol.Requires((totalSupply) < (totalSupplyLimit));
        VeriSol.Requires((totalSupply) != (totalSupplyLimit));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (uint256(decimals)));
        VeriSol.Requires((totalSupply) > (uint256(decimals)));
        VeriSol.Requires((totalSupply) != (uint256(decimals)));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((ownerTemp) != msg.sender);
        VeriSol.Requires((ownerTemp) != _minter);
        VeriSol.Requires((ownerTemp) != (owner));
        VeriSol.Requires(msg.sender != _minter);
        VeriSol.Requires(msg.sender == (owner));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) > (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) >= (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) > (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) != (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptOwner));
        VeriSol.Requires(_minter != (owner));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) == (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(totalSupply==1000000000000000000);
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(blocknumberLastAcceptMinter==12117320);
        VeriSol.Ensures(ownerTemp==address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner==0);
        VeriSol.Ensures(minterTemp!=address(0));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)==1000000000000000000);
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(minter==address(0));
        VeriSol.Ensures(VeriSol.Old(minterTemp) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minter);
        VeriSol.Ensures(VeriSol.Old(minter) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != owner);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != decimals);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == minter);
        VeriSol.Ensures(msg.sender != ownerTemp);
        VeriSol.Ensures(msg.sender != minterTemp);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(msg.sender != minter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter > blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter != blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(ownerTemp != _minter);
        VeriSol.Ensures(ownerTemp != minterTemp);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(ownerTemp != VeriSol.Old(owner));
        VeriSol.Ensures(ownerTemp == minter);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner < decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(_minter == minterTemp);
        VeriSol.Ensures(_minter != owner);
        VeriSol.Ensures(_minter != minter);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(minterTemp != VeriSol.Old(owner));
        VeriSol.Ensures(minterTemp != minter);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) <= decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) < decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(VeriSol.Old(owner) != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupplyLimit >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(msg.sender == owner);
        minterTemp = _minter;
        blocknumberLastAcceptMinter = block.number + 42000;
        emit SetMinter(_minter);
    }

    function acceptMinter() public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(minterTemp!=address(0));
        VeriSol.Requires(minter==address(0));
        VeriSol.Requires(totalSupply>0);
        VeriSol.Requires(totalSupply==1000000000000000000);
        VeriSol.Requires(ownerTemp==address(0));
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(pauseMint==false);
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Requires(blocknumberLastAcceptMinter>0);
        VeriSol.Requires(blocknumberLastAcceptMinter==12117320);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)==1000000000000000000);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires(blocknumberLastAcceptOwner==0);
        VeriSol.Requires((minterTemp) != (minter));
        VeriSol.Requires((minterTemp) != (ownerTemp));
        VeriSol.Requires((minterTemp) != msg.sender);
        VeriSol.Requires((minterTemp) != (owner));
        VeriSol.Requires((minter) == (ownerTemp));
        VeriSol.Requires((minter) != msg.sender);
        VeriSol.Requires((minter) != (owner));
        VeriSol.Requires((totalSupply) <= (totalSupplyLimit));
        VeriSol.Requires((totalSupply) < (totalSupplyLimit));
        VeriSol.Requires((totalSupply) != (totalSupplyLimit));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (uint256(decimals)));
        VeriSol.Requires((totalSupply) > (uint256(decimals)));
        VeriSol.Requires((totalSupply) != (uint256(decimals)));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((ownerTemp) != msg.sender);
        VeriSol.Requires((ownerTemp) != (owner));
        VeriSol.Requires(msg.sender == (owner));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) > (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) >= (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) > (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) != (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) >= (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) > (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(totalSupply==1000000000000000000);
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(blocknumberLastAcceptMinter==12117320);
        VeriSol.Ensures(ownerTemp==address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner==0);
        VeriSol.Ensures(minterTemp!=address(0));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)==1000000000000000000);
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(minter!=address(0));
        VeriSol.Ensures(VeriSol.Old(minterTemp) != ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minter);
        VeriSol.Ensures(VeriSol.Old(minter) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != owner);
        VeriSol.Ensures(VeriSol.Old(minter) != minter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != decimals);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minter);
        VeriSol.Ensures(msg.sender != ownerTemp);
        VeriSol.Ensures(msg.sender != minterTemp);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(msg.sender != minter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter > blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter != blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(ownerTemp != minterTemp);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(ownerTemp != VeriSol.Old(owner));
        VeriSol.Ensures(ownerTemp != minter);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner < decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(minterTemp != VeriSol.Old(owner));
        VeriSol.Ensures(minterTemp == minter);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) >= decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) > decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(VeriSol.Old(owner) != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupplyLimit >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(((msg.sender == owner) && (block.number < blocknumberLastAcceptMinter)) && (block.number > (blocknumberLastAcceptMinter - 36000)));
        minter = minterTemp;
        emit AcceptMinter(minterTemp);
    }

    function setBlacklist(address _user, bool _isBlacklist) public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(msg.sender == owner);
        blacklist[_user] = _isBlacklist;
        emit SetBlacklist(_user, _isBlacklist);
    }

    function setOwner(address payable _add) public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(minterTemp!=address(0));
        VeriSol.Requires(minter!=address(0));
        VeriSol.Requires(totalSupply>0);
        VeriSol.Requires(totalSupply==1133663366336633662);
        VeriSol.Requires(ownerTemp==address(0));
        VeriSol.Requires(_add!=address(0));
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(pauseMint==false);
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Requires(blocknumberLastAcceptMinter>0);
        VeriSol.Requires(blocknumberLastAcceptMinter==12117320);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Requires(VeriSol.SumMapping(balanceOf)==1133663366336633662);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires(blocknumberLastAcceptOwner==0);
        VeriSol.Requires((minterTemp) == (minter));
        VeriSol.Requires((minterTemp) != (ownerTemp));
        VeriSol.Requires((minterTemp) != _add);
        VeriSol.Requires((minterTemp) != msg.sender);
        VeriSol.Requires((minterTemp) != (owner));
        VeriSol.Requires((minter) != (ownerTemp));
        VeriSol.Requires((minter) != _add);
        VeriSol.Requires((minter) != msg.sender);
        VeriSol.Requires((minter) != (owner));
        VeriSol.Requires((totalSupply) <= (totalSupplyLimit));
        VeriSol.Requires((totalSupply) < (totalSupplyLimit));
        VeriSol.Requires((totalSupply) != (totalSupplyLimit));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (uint256(decimals)));
        VeriSol.Requires((totalSupply) > (uint256(decimals)));
        VeriSol.Requires((totalSupply) != (uint256(decimals)));
        VeriSol.Requires((totalSupply) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupply) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((ownerTemp) != _add);
        VeriSol.Requires((ownerTemp) != msg.sender);
        VeriSol.Requires((ownerTemp) != (owner));
        VeriSol.Requires(_add != msg.sender);
        VeriSol.Requires(_add != (owner));
        VeriSol.Requires(msg.sender == (owner));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptMinter));
        VeriSol.Requires((totalSupplyLimit) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) > (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupplyLimit) >= (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) > (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) != (uint256(decimals)));
        VeriSol.Requires((totalSupplyLimit) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((totalSupplyLimit) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) < (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) >= (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) > (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((blocknumberLastAcceptMinter) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (uint256(decimals)));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) >= (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) > (blocknumberLastAcceptOwner));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(totalSupply==1133663366336633662);
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(blocknumberLastAcceptMinter==12117320);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner==12154464);
        VeriSol.Ensures(minterTemp!=address(0));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)==1133663366336633662);
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(minter!=address(0));
        VeriSol.Ensures(VeriSol.Old(minterTemp) != ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minterTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minter);
        VeriSol.Ensures(VeriSol.Old(minter) != ownerTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) != owner);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptMinter);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupply) != decimals);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != ownerTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minterTemp);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != owner);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) != minter);
        VeriSol.Ensures(_add == ownerTemp);
        VeriSol.Ensures(_add != minterTemp);
        VeriSol.Ensures(_add != owner);
        VeriSol.Ensures(_add != minter);
        VeriSol.Ensures(msg.sender != ownerTemp);
        VeriSol.Ensures(msg.sender != minterTemp);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(msg.sender != minter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(totalSupply >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupply != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(totalSupplyLimit));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter < blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter != blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(ownerTemp != minterTemp);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(ownerTemp != VeriSol.Old(owner));
        VeriSol.Ensures(ownerTemp != minter);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != blocknumberLastAcceptOwner);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) > decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(minterTemp != VeriSol.Old(owner));
        VeriSol.Ensures(minterTemp == minter);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) >= decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) > decimals);
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > decimals);
        VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(VeriSol.Old(owner) != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupplyLimit >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(totalSupplyLimit != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals > VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require((msg.sender == owner) && (_add != address(0x0)));
        ownerTemp = _add;
        blocknumberLastAcceptOwner = block.number + 42000;
        emit SetOwner(_add);
    }

    function acceptOwner() public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(((msg.sender == ownerTemp) && (block.number < blocknumberLastAcceptOwner)) && (block.number > (blocknumberLastAcceptOwner - 36000)));
        owner = ownerTemp;
        emit AcceptOwner(owner);
    }

    function setTotalSupplyLimit(uint _amount) public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require((msg.sender == owner) && (_amount > 0));
        totalSupplyLimit = _amount;
        emit SetTotalSupplyLimit(_amount);
    }

    function () external payable {}

    function withdrawToken(address token, uint amount) public {
        //Begin of assumptions
        VeriSol.AssumesBeginningOfFunction(pauseMint==false);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit==21000000000000000000000000);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(ownerTemp != owner);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(minterTemp != owner);
        VeriSol.AssumesBeginningOfFunction(owner != minter);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupplyLimit != decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply>0);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.AssumesBeginningOfFunction(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.AssumesBeginningOfFunction(totalSupply <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(totalSupply >= decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply > decimals);
        VeriSol.AssumesBeginningOfFunction(totalSupply != decimals);
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.AssumesBeginningOfFunction(VeriSol.SumMapping(balanceOf) != decimals);
        //End of assumptions
        //Begin of invariants
        VeriSol.Requires(msg.sender!=address(0));
        VeriSol.Requires(totalSupplyLimit>0);
        VeriSol.Requires(decimals>0);
        VeriSol.Requires(decimals==18);
        VeriSol.Requires(owner!=address(0));
        VeriSol.Requires((totalSupply) == (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((totalSupply) <= (VeriSol.SumMapping(balanceOf)));
        VeriSol.Requires((blocknumberLastAcceptMinter) != (uint256(decimals)));
        VeriSol.Requires((uint256(decimals)) != (blocknumberLastAcceptOwner));
        VeriSol.Ensures(owner!=address(0));
        VeriSol.Ensures(totalSupplyLimit>0);
        VeriSol.Ensures(decimals>0);
        VeriSol.Ensures(decimals==18);
        VeriSol.Ensures(VeriSol.Old(minterTemp) == minterTemp);
        VeriSol.Ensures(VeriSol.Old(minter) == minter);
        VeriSol.Ensures(VeriSol.Old(balanceOf[msg.sender]) >= balanceOf[msg.sender]);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= totalSupply);
        VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.Old(ownerTemp) == ownerTemp);
        VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(blocknumberLastAcceptMinter == VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.Old(blocknumberLastAcceptMinter));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter != decimals);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) == totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) >= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.Old(totalSupplyLimit) <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner != decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner == VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) == VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= VeriSol.Old(VeriSol.SumMapping(balanceOf)));
        VeriSol.Ensures(VeriSol.Old(blocknumberLastAcceptMinter) != decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals);
        VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals);
        VeriSol.Ensures(owner == VeriSol.Old(owner));
        VeriSol.Ensures(decimals != VeriSol.Old(blocknumberLastAcceptOwner));
        VeriSol.Ensures(blocknumberLastAcceptMinter>0);
        VeriSol.Ensures(msg.sender == owner);
        VeriSol.Ensures(blocknumberLastAcceptMinter >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptMinter >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter > decimals);
        VeriSol.Ensures(ownerTemp!=address(0));
        VeriSol.Ensures(blocknumberLastAcceptOwner>0);
        VeriSol.Ensures(blocknumberLastAcceptOwner >= VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner > VeriSol.Old(uint256(decimals)));
        VeriSol.Ensures(blocknumberLastAcceptOwner >= decimals);
        VeriSol.Ensures(blocknumberLastAcceptOwner > decimals);
        VeriSol.Ensures(pauseMint==false);
        VeriSol.Ensures(totalSupplyLimit==21000000000000000000000000);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.Ensures(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.Ensures(ownerTemp != owner);
        VeriSol.Ensures(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.Ensures(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.Ensures(minterTemp != owner);
        VeriSol.Ensures(owner != minter);
        VeriSol.Ensures(totalSupplyLimit >= decimals);
        VeriSol.Ensures(totalSupplyLimit > decimals);
        VeriSol.Ensures(totalSupplyLimit != decimals);
        VeriSol.Ensures(totalSupply>0);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.Ensures(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.Ensures(totalSupply <= totalSupplyLimit);
        VeriSol.Ensures(totalSupply < totalSupplyLimit);
        VeriSol.Ensures(totalSupply != totalSupplyLimit);
        VeriSol.Ensures(totalSupply >= decimals);
        VeriSol.Ensures(totalSupply > decimals);
        VeriSol.Ensures(totalSupply != decimals);
        VeriSol.Ensures(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.Ensures(VeriSol.SumMapping(balanceOf) != decimals);
        //End of invariants
        require(msg.sender == owner);
        if (token == address(0x0)) owner.transfer(amount); else IToken(token).transfer(owner, amount);
    }

    function contractInvariant() private view {
        VeriSol.ContractInvariant(pauseMint==false);
        VeriSol.ContractInvariant(totalSupply>0);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf)>0);
        VeriSol.ContractInvariant(owner!=address(0));
        VeriSol.ContractInvariant(totalSupplyLimit>0);
        VeriSol.ContractInvariant(totalSupplyLimit==21000000000000000000000000);
        VeriSol.ContractInvariant(decimals>0);
        VeriSol.ContractInvariant(decimals==18);
        VeriSol.ContractInvariant(totalSupply >= blocknumberLastAcceptMinter);
        VeriSol.ContractInvariant(totalSupply > blocknumberLastAcceptMinter);
        VeriSol.ContractInvariant(totalSupply != blocknumberLastAcceptMinter);
        VeriSol.ContractInvariant(totalSupply >= blocknumberLastAcceptOwner);
        VeriSol.ContractInvariant(totalSupply > blocknumberLastAcceptOwner);
        VeriSol.ContractInvariant(totalSupply != blocknumberLastAcceptOwner);
        VeriSol.ContractInvariant(totalSupply == VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(totalSupply >= VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(totalSupply <= VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(totalSupply <= totalSupplyLimit);
        VeriSol.ContractInvariant(totalSupply < totalSupplyLimit);
        VeriSol.ContractInvariant(totalSupply != totalSupplyLimit);
        VeriSol.ContractInvariant(totalSupply >= decimals);
        VeriSol.ContractInvariant(totalSupply > decimals);
        VeriSol.ContractInvariant(totalSupply != decimals);
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter <= VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter < VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter != VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter <= totalSupplyLimit);
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter < totalSupplyLimit);
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter != totalSupplyLimit);
        VeriSol.ContractInvariant(blocknumberLastAcceptMinter != decimals);
        VeriSol.ContractInvariant(ownerTemp != owner);
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner <= VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner < VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner != VeriSol.SumMapping(balanceOf));
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner <= totalSupplyLimit);
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner < totalSupplyLimit);
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner != totalSupplyLimit);
        VeriSol.ContractInvariant(blocknumberLastAcceptOwner != decimals);
        VeriSol.ContractInvariant(minterTemp != owner);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf) <= totalSupplyLimit);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf) < totalSupplyLimit);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf) != totalSupplyLimit);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf) >= decimals);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf) > decimals);
        VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf) != decimals);
        VeriSol.ContractInvariant(owner != minter);
        VeriSol.ContractInvariant(totalSupplyLimit >= decimals);
        VeriSol.ContractInvariant(totalSupplyLimit > decimals);
        VeriSol.ContractInvariant(totalSupplyLimit != decimals);
    }
}