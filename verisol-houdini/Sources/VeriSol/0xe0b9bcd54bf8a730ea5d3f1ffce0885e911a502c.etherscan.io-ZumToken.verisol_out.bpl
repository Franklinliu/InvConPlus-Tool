type Ref;
type ContractName;
const unique null: Ref;
const unique IERC20: ContractName;
const unique SafeMath: ContractName;
const unique ERC20Detailed: ContractName;
const unique ZumToken: ContractName;
const unique VeriSol: ContractName;
function ConstantToRef(x: int) returns (ret: Ref);
function BoogieRefToInt(x: Ref) returns (ret: int);
function {:bvbuiltin "mod"} modBpl(x: int, y: int) returns (ret: int);
function keccak256(x: int) returns (ret: int);
function abiEncodePacked1(x: int) returns (ret: int);
function _SumMapping_VeriSol(x: [Ref]int) returns (ret: int);
function abiEncodePacked2(x: int, y: int) returns (ret: int);
function abiEncodePacked1R(x: Ref) returns (ret: int);
function abiEncodePacked2R(x: Ref, y: int) returns (ret: int);
var Balance: [Ref]int;
var DType: [Ref]ContractName;
var Alloc: [Ref]bool;
var balance_ADDR: [Ref]int;
var M_Ref_int: [Ref][Ref]int;
var M_Ref_Ref: [Ref][Ref]Ref;
var M_int_Ref: [Ref][int]Ref;
var M_int_int: [Ref][int]int;
var Length: [Ref]int;
var now: int;
procedure {:inline 1} FreshRefGenerator() returns (newRef: Ref);
implementation FreshRefGenerator() returns (newRef: Ref)
{
havoc newRef;
assume ((Alloc[newRef]) == (false));
Alloc[newRef] := true;
assume ((newRef) != (null));
}

procedure {:inline 1} HavocAllocMany();
implementation HavocAllocMany()
{
var oldAlloc: [Ref]bool;
oldAlloc := Alloc;
havoc Alloc;
assume (forall  __i__0_0:Ref ::  ((oldAlloc[__i__0_0]) ==> (Alloc[__i__0_0])));
}

procedure boogie_si_record_sol2Bpl_int(x: int);
procedure boogie_si_record_sol2Bpl_ref(x: Ref);
procedure boogie_si_record_sol2Bpl_bool(x: bool);

axiom(forall  __i__0_0:int, __i__0_1:int :: {ConstantToRef(__i__0_0), ConstantToRef(__i__0_1)} (((__i__0_0) == (__i__0_1)) || ((ConstantToRef(__i__0_0)) != (ConstantToRef(__i__0_1)))));

axiom(forall  __i__0_0:int, __i__0_1:int :: {keccak256(__i__0_0), keccak256(__i__0_1)} (((__i__0_0) == (__i__0_1)) || ((keccak256(__i__0_0)) != (keccak256(__i__0_1)))));

axiom(forall  __i__0_0:int, __i__0_1:int :: {abiEncodePacked1(__i__0_0), abiEncodePacked1(__i__0_1)} (((__i__0_0) == (__i__0_1)) || ((abiEncodePacked1(__i__0_0)) != (abiEncodePacked1(__i__0_1)))));

axiom(forall  __i__0_0:[Ref]int ::  ((exists __i__0_1:Ref ::  ((__i__0_0[__i__0_1]) != (0))) || ((_SumMapping_VeriSol(__i__0_0)) == (0))));

axiom(forall  __i__0_0:[Ref]int, __i__0_1:Ref, __i__0_2:int ::  ((_SumMapping_VeriSol(__i__0_0[__i__0_1 := __i__0_2])) == (((_SumMapping_VeriSol(__i__0_0)) - (__i__0_0[__i__0_1])) + (__i__0_2))));

axiom(forall  __i__0_0:int, __i__0_1:int, __i__1_0:int, __i__1_1:int :: {abiEncodePacked2(__i__0_0, __i__1_0), abiEncodePacked2(__i__0_1, __i__1_1)} ((((__i__0_0) == (__i__0_1)) && ((__i__1_0) == (__i__1_1))) || ((abiEncodePacked2(__i__0_0, __i__1_0)) != (abiEncodePacked2(__i__0_1, __i__1_1)))));

axiom(forall  __i__0_0:Ref, __i__0_1:Ref :: {abiEncodePacked1R(__i__0_0), abiEncodePacked1R(__i__0_1)} (((__i__0_0) == (__i__0_1)) || ((abiEncodePacked1R(__i__0_0)) != (abiEncodePacked1R(__i__0_1)))));

axiom(forall  __i__0_0:Ref, __i__0_1:Ref, __i__1_0:int, __i__1_1:int :: {abiEncodePacked2R(__i__0_0, __i__1_0), abiEncodePacked2R(__i__0_1, __i__1_1)} ((((__i__0_0) == (__i__0_1)) && ((__i__1_0) == (__i__1_1))) || ((abiEncodePacked2R(__i__0_0, __i__1_0)) != (abiEncodePacked2R(__i__0_1, __i__1_1)))));
procedure {:inline 1} IERC20_IERC20_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
implementation IERC20_IERC20_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
// start of initialization
assume ((msgsender_MSG) != (null));
Balance[this] := 0;
// end of initialization
}

procedure {:inline 1} IERC20_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
implementation IERC20_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 5} (true);
call IERC20_IERC20_NoBaseCtor(this, msgsender_MSG, msgvalue_MSG);
}

procedure {:public} {:inline 1} totalSupply_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
procedure {:public} {:inline 1} balanceOf_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, who_s30: Ref) returns (__ret_0_: int);
procedure {:public} {:inline 1} allowance_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s39: Ref, spender_s39: Ref) returns (__ret_0_: int);
procedure {:public} {:inline 1} transfer_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, to_s48: Ref, value_s48: int) returns (__ret_0_: bool);
procedure {:public} {:inline 1} approve_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s57: Ref, value_s57: int) returns (__ret_0_: bool);
procedure {:public} {:inline 1} transferFrom_IERC20(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, from_s68: Ref, to_s68: Ref, value_s68: int) returns (__ret_0_: bool);
procedure {:inline 1} SafeMath_SafeMath_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
implementation SafeMath_SafeMath_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
// start of initialization
assume ((msgsender_MSG) != (null));
Balance[this] := 0;
// end of initialization
}

procedure {:inline 1} SafeMath_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
implementation SafeMath_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 23} (true);
call SafeMath_SafeMath_NoBaseCtor(this, msgsender_MSG, msgvalue_MSG);
}

procedure {:inline 1} mul_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s103: int, b_s103: int) returns (__ret_0_: int);
implementation mul_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s103: int, b_s103: int) returns (__ret_0_: int)
{
var c_s102: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "a"} boogie_si_record_sol2Bpl_int(a_s103);
call  {:cexpr "b"} boogie_si_record_sol2Bpl_int(b_s103);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 24} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 25} (true);
assume ((a_s103) >= (0));
if ((a_s103) == (0)) {
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 25} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 26} (true);
__ret_0_ := 0;
return;
}
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 28} (true);
assume ((c_s102) >= (0));
assume ((a_s103) >= (0));
assume ((b_s103) >= (0));
assume (((a_s103) * (b_s103)) >= (0));
c_s102 := (a_s103) * (b_s103);
call  {:cexpr "c"} boogie_si_record_sol2Bpl_int(c_s102);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 29} (true);
assume ((c_s102) >= (0));
assume ((a_s103) >= (0));
assume ((((c_s102) div (a_s103))) >= (0));
assume ((b_s103) >= (0));
assume ((((c_s102) div (a_s103))) == (b_s103));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 30} (true);
assume ((c_s102) >= (0));
__ret_0_ := c_s102;
return;
}

procedure {:inline 1} div_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s121: int, b_s121: int) returns (__ret_0_: int);
implementation div_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s121: int, b_s121: int) returns (__ret_0_: int)
{
var c_s120: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "a"} boogie_si_record_sol2Bpl_int(a_s121);
call  {:cexpr "b"} boogie_si_record_sol2Bpl_int(b_s121);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 33} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 34} (true);
assume ((c_s120) >= (0));
assume ((a_s121) >= (0));
assume ((b_s121) >= (0));
assume (((a_s121) div (b_s121)) >= (0));
c_s120 := (a_s121) div (b_s121);
call  {:cexpr "c"} boogie_si_record_sol2Bpl_int(c_s120);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 35} (true);
assume ((c_s120) >= (0));
__ret_0_ := c_s120;
return;
}

procedure {:inline 1} sub_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s141: int, b_s141: int) returns (__ret_0_: int);
implementation sub_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s141: int, b_s141: int) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "a"} boogie_si_record_sol2Bpl_int(a_s141);
call  {:cexpr "b"} boogie_si_record_sol2Bpl_int(b_s141);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 38} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 39} (true);
assume ((b_s141) >= (0));
assume ((a_s141) >= (0));
assume ((b_s141) <= (a_s141));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 40} (true);
assume ((a_s141) >= (0));
assume ((b_s141) >= (0));
assume (((a_s141) - (b_s141)) >= (0));
__ret_0_ := (a_s141) - (b_s141);
return;
}

procedure {:inline 1} add_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s167: int, b_s167: int) returns (__ret_0_: int);
implementation add_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s167: int, b_s167: int) returns (__ret_0_: int)
{
var c_s166: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "a"} boogie_si_record_sol2Bpl_int(a_s167);
call  {:cexpr "b"} boogie_si_record_sol2Bpl_int(b_s167);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 43} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 44} (true);
assume ((a_s167) >= (0));
assume ((b_s167) >= (0));
assume (((a_s167) + (b_s167)) >= (0));
assume ((a_s167) >= (0));
assume (((a_s167) + (b_s167)) >= (a_s167));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 45} (true);
assume ((c_s166) >= (0));
assume ((a_s167) >= (0));
assume ((b_s167) >= (0));
assume (((a_s167) + (b_s167)) >= (0));
c_s166 := (a_s167) + (b_s167);
call  {:cexpr "c"} boogie_si_record_sol2Bpl_int(c_s166);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 47} (true);
assume ((c_s166) >= (0));
__ret_0_ := c_s166;
return;
}

procedure {:inline 1} ceil_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s199: int, m_s199: int) returns (__ret_0_: int);
implementation ceil_SafeMath(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, a_s199: int, m_s199: int) returns (__ret_0_: int)
{
var c_s198: int;
var d_s198: int;
var __var_1: int;
var __var_2: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "a"} boogie_si_record_sol2Bpl_int(a_s199);
call  {:cexpr "m"} boogie_si_record_sol2Bpl_int(m_s199);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 50} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 51} (true);
assume ((c_s198) >= (0));
assume ((a_s199) >= (0));
assume ((m_s199) >= (0));
call c_s198 := add_SafeMath(this, msgsender_MSG, msgvalue_MSG, a_s199, m_s199);
c_s198 := c_s198;
call  {:cexpr "c"} boogie_si_record_sol2Bpl_int(c_s198);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 52} (true);
assume ((d_s198) >= (0));
assume ((c_s198) >= (0));
call d_s198 := sub_SafeMath(this, msgsender_MSG, msgvalue_MSG, c_s198, 1);
d_s198 := d_s198;
call  {:cexpr "d"} boogie_si_record_sol2Bpl_int(d_s198);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 53} (true);
assume ((__var_1) >= (0));
assume ((__var_2) >= (0));
assume ((d_s198) >= (0));
assume ((m_s199) >= (0));
call __var_2 := div_SafeMath(this, msgsender_MSG, msgvalue_MSG, d_s198, m_s199);
assume ((__var_2) >= (0));
assume ((m_s199) >= (0));
call __var_1 := mul_SafeMath(this, msgsender_MSG, msgvalue_MSG, __var_2, m_s199);
assume ((__var_1) >= (0));
__ret_0_ := __var_1;
return;
}

var _name_ERC20Detailed: [Ref]int;
var _symbol_ERC20Detailed: [Ref]int;
var _decimals_ERC20Detailed: [Ref]int;
procedure {:inline 1} ERC20Detailed_ERC20Detailed_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, name_s230: int, symbol_s230: int, decimals_s230: int);
implementation ERC20Detailed_ERC20Detailed_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, name_s230: int, symbol_s230: int, decimals_s230: int)
{
// start of initialization
assume ((msgsender_MSG) != (null));
Balance[this] := 0;
_name_ERC20Detailed[this] := -467282726;
_symbol_ERC20Detailed[this] := -467282726;
_decimals_ERC20Detailed[this] := 0;
// end of initialization
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "name"} boogie_si_record_sol2Bpl_int(name_s230);
call  {:cexpr "symbol"} boogie_si_record_sol2Bpl_int(symbol_s230);
call  {:cexpr "decimals"} boogie_si_record_sol2Bpl_int(decimals_s230);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 62} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 63} (true);
_name_ERC20Detailed[this] := name_s230;
call  {:cexpr "_name"} boogie_si_record_sol2Bpl_int(_name_ERC20Detailed[this]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 64} (true);
_symbol_ERC20Detailed[this] := symbol_s230;
call  {:cexpr "_symbol"} boogie_si_record_sol2Bpl_int(_symbol_ERC20Detailed[this]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 65} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((decimals_s230) >= (0));
_decimals_ERC20Detailed[this] := decimals_s230;
call  {:cexpr "_decimals"} boogie_si_record_sol2Bpl_int(_decimals_ERC20Detailed[this]);
}

procedure {:constructor} {:public} {:inline 1} ERC20Detailed_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, name_s230: int, symbol_s230: int, decimals_s230: int);
implementation ERC20Detailed_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, name_s230: int, symbol_s230: int, decimals_s230: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "name"} boogie_si_record_sol2Bpl_int(name_s230);
call  {:cexpr "symbol"} boogie_si_record_sol2Bpl_int(symbol_s230);
call  {:cexpr "decimals"} boogie_si_record_sol2Bpl_int(decimals_s230);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
call IERC20_IERC20(this, msgsender_MSG, msgvalue_MSG);
call ERC20Detailed_ERC20Detailed_NoBaseCtor(this, msgsender_MSG, msgvalue_MSG, name_s230, symbol_s230, decimals_s230);
}

procedure {:public} {:inline 1} name_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
implementation name_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 68} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 69} (true);
__ret_0_ := _name_ERC20Detailed[this];
return;
}

procedure {:public} {:inline 1} symbol_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
implementation symbol_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 72} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 73} (true);
__ret_0_ := _symbol_ERC20Detailed[this];
return;
}

procedure {:public} {:inline 1} decimals_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
implementation decimals_ERC20Detailed(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 76} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 77} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
__ret_0_ := _decimals_ERC20Detailed[this];
return;
}

var _balances_ZumToken: [Ref]Ref;
var _allowed_ZumToken: [Ref]Ref;
var tokenName_ZumToken: [Ref]int;
var tokenSymbol_ZumToken: [Ref]int;
var tokenDecimals_ZumToken: [Ref]int;
var _totalSupply_ZumToken: [Ref]int;
var basePercent_ZumToken: [Ref]int;
const {:existential true} HoudiniF1_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF2_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF3_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF4_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF5_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF6_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF7_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF8_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF9_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF10_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF11_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF12_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF13_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF14_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF15_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF16_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF17_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF18_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF19_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF20_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF21_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF22_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF23_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF24_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF25_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF26_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF27_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF28_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF29_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF30_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF31_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF32_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF33_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF34_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF35_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF36_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF37_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF38_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF39_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF40_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF41_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF42_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF43_ZumToken_ZumToken_NoBaseCtor: bool;
const {:existential true} HoudiniF44_ZumToken_ZumToken_NoBaseCtor: bool;
procedure {:inline 1} ZumToken_ZumToken_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
ensures HoudiniF1_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF2_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF3_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF4_ZumToken_ZumToken_NoBaseCtor ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF5_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF6_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF7_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF8_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF9_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF10_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF11_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF12_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF13_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF14_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF15_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF16_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF17_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF18_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF19_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF20_ZumToken_ZumToken_NoBaseCtor ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF21_ZumToken_ZumToken_NoBaseCtor ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF22_ZumToken_ZumToken_NoBaseCtor ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF23_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF24_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF25_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF26_ZumToken_ZumToken_NoBaseCtor ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF27_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF28_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF29_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF30_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF31_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF32_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF33_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF34_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF35_ZumToken_ZumToken_NoBaseCtor ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF36_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF37_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF38_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF39_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF40_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF41_ZumToken_ZumToken_NoBaseCtor ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF42_ZumToken_ZumToken_NoBaseCtor ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF43_ZumToken_ZumToken_NoBaseCtor ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF44_ZumToken_ZumToken_NoBaseCtor ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation ZumToken_ZumToken_NoBaseCtor(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
var __var_3: Ref;
var __var_4: Ref;
// start of initialization
assume ((msgsender_MSG) != (null));
Balance[this] := 0;
// Make array/mapping vars distinct for _balances
call __var_3 := FreshRefGenerator();
_balances_ZumToken[this] := __var_3;
// Initialize Integer mapping _balances
assume (forall  __i__0_0:Ref ::  ((M_Ref_int[_balances_ZumToken[this]][__i__0_0]) == (0)));
// Make array/mapping vars distinct for _allowed
call __var_4 := FreshRefGenerator();
_allowed_ZumToken[this] := __var_4;
// Initialize length of 1-level nested array in _allowed
assume (forall  __i__0_0:Ref ::  ((Length[M_Ref_Ref[_allowed_ZumToken[this]][__i__0_0]]) == (0)));
assume (forall  __i__0_0:Ref ::  (!(Alloc[M_Ref_Ref[_allowed_ZumToken[this]][__i__0_0]])));
call HavocAllocMany();
assume (forall  __i__0_0:Ref ::  (Alloc[M_Ref_Ref[_allowed_ZumToken[this]][__i__0_0]]));
assume (forall  __i__0_0:Ref, __i__0_1:Ref :: {M_Ref_Ref[_allowed_ZumToken[this]][__i__0_0], M_Ref_Ref[_allowed_ZumToken[this]][__i__0_1]} (((__i__0_0) == (__i__0_1)) || ((M_Ref_Ref[_allowed_ZumToken[this]][__i__0_0]) != (M_Ref_Ref[_allowed_ZumToken[this]][__i__0_1]))));
tokenName_ZumToken[this] := 1055700187;
tokenSymbol_ZumToken[this] := -1503238464;
tokenDecimals_ZumToken[this] := 8;
_totalSupply_ZumToken[this] := 10000000000000000000;
basePercent_ZumToken[this] := 100;
// end of initialization
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
// ---- Logic for payable function START 
assume ((Balance[msgsender_MSG]) >= (msgvalue_MSG));
Balance[msgsender_MSG] := (Balance[msgsender_MSG]) - (msgvalue_MSG);
Balance[this] := (Balance[this]) + (msgvalue_MSG);
// ---- Logic for payable function END 
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 92} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 94} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 95} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 96} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 97} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 98} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 99} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 100} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 101} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 102} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 103} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 104} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 105} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 106} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 107} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 108} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 109} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 110} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 111} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 112} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 113} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 114} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 115} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 118} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 119} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 120} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 121} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 122} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 123} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 124} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 125} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 126} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 127} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 128} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 129} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 130} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 131} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 132} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 133} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 134} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 135} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 136} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 137} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 138} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 139} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 140} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 141} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 142} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 143} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 144} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 145} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 146} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 147} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 148} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 149} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 150} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 151} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 152} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 153} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 154} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 155} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 156} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 157} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 158} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 159} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 160} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 161} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 163} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
call _issue_ZumToken(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_ZumToken[this]);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
}

procedure {:constructor} {:public} {:inline 1} ZumToken_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
implementation ZumToken_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int)
{
var __var_3: Ref;
var __var_4: Ref;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
call IERC20_IERC20(this, msgsender_MSG, msgvalue_MSG);
assume ((tokenDecimals_ZumToken[this]) >= (0));
call ERC20Detailed_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG, tokenName_ZumToken[this], tokenSymbol_ZumToken[this], tokenDecimals_ZumToken[this]);
call ZumToken_ZumToken_NoBaseCtor(this, msgsender_MSG, msgvalue_MSG);
}

procedure {:public} {:inline 1} totalSupply_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int);
implementation totalSupply_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 166} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 167} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
__ret_0_ := _totalSupply_ZumToken[this];
return;
}

procedure {:public} {:inline 1} balanceOf_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s938: Ref) returns (__ret_0_: int);
implementation balanceOf_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s938: Ref) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "owner"} boogie_si_record_sol2Bpl_ref(owner_s938);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 170} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 171} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][owner_s938]) >= (0));
__ret_0_ := M_Ref_int[_balances_ZumToken[this]][owner_s938];
return;
}

procedure {:public} {:inline 1} allowance_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s954: Ref, spender_s954: Ref) returns (__ret_0_: int);
implementation allowance_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, owner_s954: Ref, spender_s954: Ref) returns (__ret_0_: int)
{
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "owner"} boogie_si_record_sol2Bpl_ref(owner_s954);
call  {:cexpr "spender"} boogie_si_record_sol2Bpl_ref(spender_s954);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 174} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 175} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][owner_s954]][spender_s954]) >= (0));
__ret_0_ := M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][owner_s954]][spender_s954];
return;
}

procedure {:public} {:inline 1} cut_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, value_s981: int) returns (__ret_0_: int);
implementation cut_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, value_s981: int) returns (__ret_0_: int)
{
var roundValue_s980: int;
var cutValue_s980: int;
var __var_5: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "value"} boogie_si_record_sol2Bpl_int(value_s981);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 178} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 179} (true);
assume ((roundValue_s980) >= (0));
assume ((value_s981) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
call roundValue_s980 := ceil_SafeMath(this, this, 0, value_s981, basePercent_ZumToken[this]);
roundValue_s980 := roundValue_s980;
call  {:cexpr "roundValue"} boogie_si_record_sol2Bpl_int(roundValue_s980);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 180} (true);
assume ((cutValue_s980) >= (0));
assume ((__var_5) >= (0));
assume ((roundValue_s980) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
call __var_5 := mul_SafeMath(this, this, 0, roundValue_s980, basePercent_ZumToken[this]);
assume ((__var_5) >= (0));
call cutValue_s980 := div_SafeMath(this, this, 0, __var_5, 1000);
cutValue_s980 := cutValue_s980;
call  {:cexpr "cutValue"} boogie_si_record_sol2Bpl_int(cutValue_s980);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 181} (true);
assume ((cutValue_s980) >= (0));
__ret_0_ := cutValue_s980;
return;
}

const {:existential true} HoudiniF45_transfer_ZumToken: bool;
const {:existential true} HoudiniF46_transfer_ZumToken: bool;
const {:existential true} HoudiniF47_transfer_ZumToken: bool;
const {:existential true} HoudiniF48_transfer_ZumToken: bool;
const {:existential true} HoudiniF49_transfer_ZumToken: bool;
const {:existential true} HoudiniF50_transfer_ZumToken: bool;
const {:existential true} HoudiniF51_transfer_ZumToken: bool;
const {:existential true} HoudiniF52_transfer_ZumToken: bool;
const {:existential true} HoudiniF53_transfer_ZumToken: bool;
const {:existential true} HoudiniF54_transfer_ZumToken: bool;
const {:existential true} HoudiniF55_transfer_ZumToken: bool;
const {:existential true} HoudiniF56_transfer_ZumToken: bool;
const {:existential true} HoudiniF57_transfer_ZumToken: bool;
const {:existential true} HoudiniF58_transfer_ZumToken: bool;
const {:existential true} HoudiniF59_transfer_ZumToken: bool;
const {:existential true} HoudiniF60_transfer_ZumToken: bool;
const {:existential true} HoudiniF61_transfer_ZumToken: bool;
const {:existential true} HoudiniF62_transfer_ZumToken: bool;
const {:existential true} HoudiniF63_transfer_ZumToken: bool;
const {:existential true} HoudiniF64_transfer_ZumToken: bool;
const {:existential true} HoudiniF65_transfer_ZumToken: bool;
const {:existential true} HoudiniF66_transfer_ZumToken: bool;
const {:existential true} HoudiniF67_transfer_ZumToken: bool;
const {:existential true} HoudiniF68_transfer_ZumToken: bool;
const {:existential true} HoudiniF69_transfer_ZumToken: bool;
const {:existential true} HoudiniF70_transfer_ZumToken: bool;
const {:existential true} HoudiniF71_transfer_ZumToken: bool;
const {:existential true} HoudiniF72_transfer_ZumToken: bool;
const {:existential true} HoudiniF73_transfer_ZumToken: bool;
const {:existential true} HoudiniF74_transfer_ZumToken: bool;
const {:existential true} HoudiniF75_transfer_ZumToken: bool;
const {:existential true} HoudiniF76_transfer_ZumToken: bool;
const {:existential true} HoudiniF77_transfer_ZumToken: bool;
const {:existential true} HoudiniF78_transfer_ZumToken: bool;
const {:existential true} HoudiniF79_transfer_ZumToken: bool;
const {:existential true} HoudiniF80_transfer_ZumToken: bool;
const {:existential true} HoudiniF81_transfer_ZumToken: bool;
const {:existential true} HoudiniF82_transfer_ZumToken: bool;
const {:existential true} HoudiniF83_transfer_ZumToken: bool;
const {:existential true} HoudiniF84_transfer_ZumToken: bool;
const {:existential true} HoudiniF85_transfer_ZumToken: bool;
const {:existential true} HoudiniF86_transfer_ZumToken: bool;
const {:existential true} HoudiniF87_transfer_ZumToken: bool;
const {:existential true} HoudiniF88_transfer_ZumToken: bool;
const {:existential true} HoudiniF89_transfer_ZumToken: bool;
const {:existential true} HoudiniF90_transfer_ZumToken: bool;
const {:existential true} HoudiniF91_transfer_ZumToken: bool;
const {:existential true} HoudiniF92_transfer_ZumToken: bool;
const {:existential true} HoudiniF93_transfer_ZumToken: bool;
const {:existential true} HoudiniF94_transfer_ZumToken: bool;
const {:existential true} HoudiniF95_transfer_ZumToken: bool;
const {:existential true} HoudiniF96_transfer_ZumToken: bool;
const {:existential true} HoudiniF97_transfer_ZumToken: bool;
const {:existential true} HoudiniF98_transfer_ZumToken: bool;
const {:existential true} HoudiniF99_transfer_ZumToken: bool;
const {:existential true} HoudiniF100_transfer_ZumToken: bool;
const {:existential true} HoudiniF101_transfer_ZumToken: bool;
const {:existential true} HoudiniF102_transfer_ZumToken: bool;
const {:existential true} HoudiniF103_transfer_ZumToken: bool;
const {:existential true} HoudiniF104_transfer_ZumToken: bool;
const {:existential true} HoudiniF105_transfer_ZumToken: bool;
const {:existential true} HoudiniF106_transfer_ZumToken: bool;
const {:existential true} HoudiniF107_transfer_ZumToken: bool;
const {:existential true} HoudiniF108_transfer_ZumToken: bool;
const {:existential true} HoudiniF109_transfer_ZumToken: bool;
const {:existential true} HoudiniF110_transfer_ZumToken: bool;
const {:existential true} HoudiniF111_transfer_ZumToken: bool;
const {:existential true} HoudiniF112_transfer_ZumToken: bool;
const {:existential true} HoudiniF113_transfer_ZumToken: bool;
const {:existential true} HoudiniF114_transfer_ZumToken: bool;
const {:existential true} HoudiniF115_transfer_ZumToken: bool;
const {:existential true} HoudiniF116_transfer_ZumToken: bool;
const {:existential true} HoudiniF117_transfer_ZumToken: bool;
const {:existential true} HoudiniF118_transfer_ZumToken: bool;
const {:existential true} HoudiniF119_transfer_ZumToken: bool;
const {:existential true} HoudiniF120_transfer_ZumToken: bool;
const {:existential true} HoudiniF121_transfer_ZumToken: bool;
const {:existential true} HoudiniF122_transfer_ZumToken: bool;
const {:existential true} HoudiniF123_transfer_ZumToken: bool;
const {:existential true} HoudiniF124_transfer_ZumToken: bool;
const {:existential true} HoudiniF125_transfer_ZumToken: bool;
const {:existential true} HoudiniF126_transfer_ZumToken: bool;
const {:existential true} HoudiniF127_transfer_ZumToken: bool;
const {:existential true} HoudiniF128_transfer_ZumToken: bool;
const {:existential true} HoudiniF129_transfer_ZumToken: bool;
const {:existential true} HoudiniF130_transfer_ZumToken: bool;
const {:existential true} HoudiniF131_transfer_ZumToken: bool;
const {:existential true} HoudiniF132_transfer_ZumToken: bool;
const {:existential true} HoudiniF133_transfer_ZumToken: bool;
const {:existential true} HoudiniF134_transfer_ZumToken: bool;
const {:existential true} HoudiniF135_transfer_ZumToken: bool;
const {:existential true} HoudiniF136_transfer_ZumToken: bool;
const {:existential true} HoudiniF137_transfer_ZumToken: bool;
const {:existential true} HoudiniF138_transfer_ZumToken: bool;
const {:existential true} HoudiniF139_transfer_ZumToken: bool;
const {:existential true} HoudiniF140_transfer_ZumToken: bool;
const {:existential true} HoudiniF141_transfer_ZumToken: bool;
const {:existential true} HoudiniF142_transfer_ZumToken: bool;
const {:existential true} HoudiniF143_transfer_ZumToken: bool;
const {:existential true} HoudiniF144_transfer_ZumToken: bool;
const {:existential true} HoudiniF145_transfer_ZumToken: bool;
const {:existential true} HoudiniF146_transfer_ZumToken: bool;
const {:existential true} HoudiniF147_transfer_ZumToken: bool;
const {:existential true} HoudiniF148_transfer_ZumToken: bool;
const {:existential true} HoudiniF149_transfer_ZumToken: bool;
const {:existential true} HoudiniF150_transfer_ZumToken: bool;
const {:existential true} HoudiniF151_transfer_ZumToken: bool;
const {:existential true} HoudiniF152_transfer_ZumToken: bool;
const {:existential true} HoudiniF153_transfer_ZumToken: bool;
const {:existential true} HoudiniF154_transfer_ZumToken: bool;
const {:existential true} HoudiniF155_transfer_ZumToken: bool;
const {:existential true} HoudiniF156_transfer_ZumToken: bool;
const {:existential true} HoudiniF157_transfer_ZumToken: bool;
const {:existential true} HoudiniF158_transfer_ZumToken: bool;
const {:existential true} HoudiniF159_transfer_ZumToken: bool;
const {:existential true} HoudiniF160_transfer_ZumToken: bool;
const {:existential true} HoudiniF161_transfer_ZumToken: bool;
const {:existential true} HoudiniF162_transfer_ZumToken: bool;
const {:existential true} HoudiniF163_transfer_ZumToken: bool;
const {:existential true} HoudiniF164_transfer_ZumToken: bool;
const {:existential true} HoudiniF165_transfer_ZumToken: bool;
const {:existential true} HoudiniF166_transfer_ZumToken: bool;
const {:existential true} HoudiniF167_transfer_ZumToken: bool;
const {:existential true} HoudiniF168_transfer_ZumToken: bool;
const {:existential true} HoudiniF169_transfer_ZumToken: bool;
const {:existential true} HoudiniF170_transfer_ZumToken: bool;
const {:existential true} HoudiniF171_transfer_ZumToken: bool;
const {:existential true} HoudiniF172_transfer_ZumToken: bool;
const {:existential true} HoudiniF173_transfer_ZumToken: bool;
const {:existential true} HoudiniF174_transfer_ZumToken: bool;
const {:existential true} HoudiniF175_transfer_ZumToken: bool;
const {:existential true} HoudiniF176_transfer_ZumToken: bool;
const {:existential true} HoudiniF177_transfer_ZumToken: bool;
const {:existential true} HoudiniF178_transfer_ZumToken: bool;
const {:existential true} HoudiniF179_transfer_ZumToken: bool;
const {:existential true} HoudiniF180_transfer_ZumToken: bool;
const {:existential true} HoudiniF181_transfer_ZumToken: bool;
const {:existential true} HoudiniF182_transfer_ZumToken: bool;
const {:existential true} HoudiniF183_transfer_ZumToken: bool;
const {:existential true} HoudiniF184_transfer_ZumToken: bool;
const {:existential true} HoudiniF185_transfer_ZumToken: bool;
const {:existential true} HoudiniF186_transfer_ZumToken: bool;
const {:existential true} HoudiniF187_transfer_ZumToken: bool;
const {:existential true} HoudiniF188_transfer_ZumToken: bool;
const {:existential true} HoudiniF189_transfer_ZumToken: bool;
const {:existential true} HoudiniF190_transfer_ZumToken: bool;
const {:existential true} HoudiniF191_transfer_ZumToken: bool;
const {:existential true} HoudiniF192_transfer_ZumToken: bool;
const {:existential true} HoudiniF193_transfer_ZumToken: bool;
const {:existential true} HoudiniF194_transfer_ZumToken: bool;
const {:existential true} HoudiniF195_transfer_ZumToken: bool;
const {:existential true} HoudiniF196_transfer_ZumToken: bool;
const {:existential true} HoudiniF197_transfer_ZumToken: bool;
const {:existential true} HoudiniF198_transfer_ZumToken: bool;
const {:existential true} HoudiniF199_transfer_ZumToken: bool;
const {:existential true} HoudiniF200_transfer_ZumToken: bool;
const {:existential true} HoudiniF201_transfer_ZumToken: bool;
const {:existential true} HoudiniF202_transfer_ZumToken: bool;
const {:existential true} HoudiniF203_transfer_ZumToken: bool;
const {:existential true} HoudiniF204_transfer_ZumToken: bool;
const {:existential true} HoudiniF205_transfer_ZumToken: bool;
const {:existential true} HoudiniF206_transfer_ZumToken: bool;
const {:existential true} HoudiniF207_transfer_ZumToken: bool;
const {:existential true} HoudiniF208_transfer_ZumToken: bool;
const {:existential true} HoudiniF209_transfer_ZumToken: bool;
const {:existential true} HoudiniF210_transfer_ZumToken: bool;
const {:existential true} HoudiniF211_transfer_ZumToken: bool;
const {:existential true} HoudiniF212_transfer_ZumToken: bool;
const {:existential true} HoudiniF213_transfer_ZumToken: bool;
const {:existential true} HoudiniF214_transfer_ZumToken: bool;
const {:existential true} HoudiniF215_transfer_ZumToken: bool;
const {:existential true} HoudiniF216_transfer_ZumToken: bool;
const {:existential true} HoudiniF217_transfer_ZumToken: bool;
const {:existential true} HoudiniF218_transfer_ZumToken: bool;
const {:existential true} HoudiniF219_transfer_ZumToken: bool;
const {:existential true} HoudiniF220_transfer_ZumToken: bool;
const {:existential true} HoudiniF221_transfer_ZumToken: bool;
const {:existential true} HoudiniF222_transfer_ZumToken: bool;
const {:existential true} HoudiniF223_transfer_ZumToken: bool;
const {:existential true} HoudiniF224_transfer_ZumToken: bool;
const {:existential true} HoudiniF225_transfer_ZumToken: bool;
const {:existential true} HoudiniF226_transfer_ZumToken: bool;
const {:existential true} HoudiniF227_transfer_ZumToken: bool;
const {:existential true} HoudiniF228_transfer_ZumToken: bool;
const {:existential true} HoudiniF229_transfer_ZumToken: bool;
const {:existential true} HoudiniF230_transfer_ZumToken: bool;
const {:existential true} HoudiniF231_transfer_ZumToken: bool;
const {:existential true} HoudiniF232_transfer_ZumToken: bool;
const {:existential true} HoudiniF233_transfer_ZumToken: bool;
const {:existential true} HoudiniF234_transfer_ZumToken: bool;
const {:existential true} HoudiniF235_transfer_ZumToken: bool;
const {:existential true} HoudiniF236_transfer_ZumToken: bool;
const {:existential true} HoudiniF237_transfer_ZumToken: bool;
const {:existential true} HoudiniF238_transfer_ZumToken: bool;
const {:existential true} HoudiniF239_transfer_ZumToken: bool;
const {:existential true} HoudiniF240_transfer_ZumToken: bool;
const {:existential true} HoudiniF241_transfer_ZumToken: bool;
const {:existential true} HoudiniF242_transfer_ZumToken: bool;
const {:existential true} HoudiniF243_transfer_ZumToken: bool;
const {:existential true} HoudiniF244_transfer_ZumToken: bool;
const {:existential true} HoudiniF245_transfer_ZumToken: bool;
const {:existential true} HoudiniF246_transfer_ZumToken: bool;
const {:existential true} HoudiniF247_transfer_ZumToken: bool;
const {:existential true} HoudiniF248_transfer_ZumToken: bool;
const {:existential true} HoudiniF249_transfer_ZumToken: bool;
const {:existential true} HoudiniF250_transfer_ZumToken: bool;
const {:existential true} HoudiniF251_transfer_ZumToken: bool;
const {:existential true} HoudiniF252_transfer_ZumToken: bool;
const {:existential true} HoudiniF253_transfer_ZumToken: bool;
const {:existential true} HoudiniF254_transfer_ZumToken: bool;
const {:existential true} HoudiniF255_transfer_ZumToken: bool;
const {:existential true} HoudiniF256_transfer_ZumToken: bool;
const {:existential true} HoudiniF257_transfer_ZumToken: bool;
const {:existential true} HoudiniF258_transfer_ZumToken: bool;
const {:existential true} HoudiniF259_transfer_ZumToken: bool;
const {:existential true} HoudiniF260_transfer_ZumToken: bool;
const {:existential true} HoudiniF261_transfer_ZumToken: bool;
const {:existential true} HoudiniF262_transfer_ZumToken: bool;
const {:existential true} HoudiniF263_transfer_ZumToken: bool;
const {:existential true} HoudiniF264_transfer_ZumToken: bool;
const {:existential true} HoudiniF265_transfer_ZumToken: bool;
const {:existential true} HoudiniF266_transfer_ZumToken: bool;
const {:existential true} HoudiniF267_transfer_ZumToken: bool;
const {:existential true} HoudiniF268_transfer_ZumToken: bool;
const {:existential true} HoudiniF269_transfer_ZumToken: bool;
const {:existential true} HoudiniF270_transfer_ZumToken: bool;
const {:existential true} HoudiniF271_transfer_ZumToken: bool;
const {:existential true} HoudiniF272_transfer_ZumToken: bool;
const {:existential true} HoudiniF273_transfer_ZumToken: bool;
const {:existential true} HoudiniF274_transfer_ZumToken: bool;
const {:existential true} HoudiniF275_transfer_ZumToken: bool;
const {:existential true} HoudiniF276_transfer_ZumToken: bool;
const {:existential true} HoudiniF277_transfer_ZumToken: bool;
const {:existential true} HoudiniF278_transfer_ZumToken: bool;
const {:existential true} HoudiniF279_transfer_ZumToken: bool;
const {:existential true} HoudiniF280_transfer_ZumToken: bool;
const {:existential true} HoudiniF281_transfer_ZumToken: bool;
const {:existential true} HoudiniF282_transfer_ZumToken: bool;
const {:existential true} HoudiniF283_transfer_ZumToken: bool;
const {:existential true} HoudiniF284_transfer_ZumToken: bool;
const {:existential true} HoudiniF285_transfer_ZumToken: bool;
const {:existential true} HoudiniF286_transfer_ZumToken: bool;
const {:existential true} HoudiniF287_transfer_ZumToken: bool;
const {:existential true} HoudiniF288_transfer_ZumToken: bool;
const {:existential true} HoudiniF289_transfer_ZumToken: bool;
const {:existential true} HoudiniF290_transfer_ZumToken: bool;
const {:existential true} HoudiniF291_transfer_ZumToken: bool;
const {:existential true} HoudiniF292_transfer_ZumToken: bool;
const {:existential true} HoudiniF293_transfer_ZumToken: bool;
const {:existential true} HoudiniF294_transfer_ZumToken: bool;
const {:existential true} HoudiniF295_transfer_ZumToken: bool;
const {:existential true} HoudiniF296_transfer_ZumToken: bool;
const {:existential true} HoudiniF297_transfer_ZumToken: bool;
const {:existential true} HoudiniF298_transfer_ZumToken: bool;
const {:existential true} HoudiniF299_transfer_ZumToken: bool;
const {:existential true} HoudiniF300_transfer_ZumToken: bool;
const {:existential true} HoudiniF301_transfer_ZumToken: bool;
const {:existential true} HoudiniF302_transfer_ZumToken: bool;
const {:existential true} HoudiniF303_transfer_ZumToken: bool;
procedure {:public} {:inline 1} transfer_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, to_s4483: Ref, value_s4483: int) returns (__ret_0_: bool);
requires HoudiniF45_transfer_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF46_transfer_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) > (0));
requires HoudiniF47_transfer_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF48_transfer_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
requires HoudiniF49_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
requires HoudiniF50_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
requires HoudiniF51_transfer_ZumToken ==> ((value_s4483) > (0));
requires HoudiniF52_transfer_ZumToken ==> ((to_s4483) != (null));
requires HoudiniF53_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
requires HoudiniF54_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
requires HoudiniF55_transfer_ZumToken ==> ((msgsender_MSG) != (to_s4483));
requires HoudiniF56_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= ((basePercent_ZumToken[this])));
requires HoudiniF57_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) > ((basePercent_ZumToken[this])));
requires HoudiniF58_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != ((basePercent_ZumToken[this])));
requires HoudiniF59_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) <= ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF60_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF61_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (value_s4483));
requires HoudiniF62_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF63_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF64_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF65_transfer_ZumToken ==> (((basePercent_ZumToken[this])) <= ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF66_transfer_ZumToken ==> (((basePercent_ZumToken[this])) < ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF67_transfer_ZumToken ==> (((basePercent_ZumToken[this])) != ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF68_transfer_ZumToken ==> (((basePercent_ZumToken[this])) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF69_transfer_ZumToken ==> (((basePercent_ZumToken[this])) < ((_totalSupply_ZumToken[this])));
requires HoudiniF70_transfer_ZumToken ==> (((basePercent_ZumToken[this])) != ((_totalSupply_ZumToken[this])));
requires HoudiniF71_transfer_ZumToken ==> (((basePercent_ZumToken[this])) != ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF72_transfer_ZumToken ==> (((basePercent_ZumToken[this])) <= (value_s4483));
requires HoudiniF73_transfer_ZumToken ==> (((basePercent_ZumToken[this])) < (value_s4483));
requires HoudiniF74_transfer_ZumToken ==> (((basePercent_ZumToken[this])) != (value_s4483));
requires HoudiniF75_transfer_ZumToken ==> (((basePercent_ZumToken[this])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF76_transfer_ZumToken ==> (((basePercent_ZumToken[this])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF77_transfer_ZumToken ==> (((basePercent_ZumToken[this])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF78_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) == ((_totalSupply_ZumToken[this])));
requires HoudiniF79_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((_totalSupply_ZumToken[this])));
requires HoudiniF80_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF81_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF82_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF83_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF84_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (value_s4483));
requires HoudiniF85_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (value_s4483));
requires HoudiniF86_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (value_s4483));
requires HoudiniF87_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF88_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF89_transfer_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF90_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) >= ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF91_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) > ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF92_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) != ((M_Ref_int[_balances_ZumToken[this]][to_s4483])));
requires HoudiniF93_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) >= (value_s4483));
requires HoudiniF94_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) > (value_s4483));
requires HoudiniF95_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) != (value_s4483));
requires HoudiniF96_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF97_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF98_transfer_ZumToken ==> (((_totalSupply_ZumToken[this])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF99_transfer_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF100_transfer_ZumToken ==> ((value_s4483) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF101_transfer_ZumToken ==> ((value_s4483) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF102_transfer_ZumToken ==> ((value_s4483) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF103_transfer_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF104_transfer_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF105_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF106_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF107_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF108_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF109_transfer_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF110_transfer_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF111_transfer_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) > (0));
ensures HoudiniF112_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF113_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF114_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF115_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(basePercent_ZumToken[this])));
ensures HoudiniF116_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(basePercent_ZumToken[this])));
ensures HoudiniF117_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(basePercent_ZumToken[this])));
ensures HoudiniF118_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF119_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF120_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF121_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF122_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF123_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF124_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF125_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(_totalSupply_ZumToken[this])));
ensures HoudiniF126_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF127_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(M_Ref_int[_balances_ZumToken[this]][to_s4483])));
ensures HoudiniF128_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (value_s4483));
ensures HoudiniF129_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (value_s4483));
ensures HoudiniF130_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (value_s4483));
ensures HoudiniF131_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF132_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF133_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF134_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF135_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF136_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF137_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF138_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF139_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF140_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF141_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF142_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF143_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF144_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (_totalSupply_ZumToken[this]));
ensures HoudiniF145_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF146_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF147_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) > (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF148_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF149_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (basePercent_ZumToken[this]));
ensures HoudiniF150_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) > (basePercent_ZumToken[this]));
ensures HoudiniF151_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (basePercent_ZumToken[this]));
ensures HoudiniF152_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF153_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF154_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) < (_totalSupply_ZumToken[this]));
ensures HoudiniF155_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) != (_totalSupply_ZumToken[this]));
ensures HoudiniF156_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF157_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF158_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF159_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF160_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF161_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF162_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF163_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF164_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) < (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF165_transfer_ZumToken ==> ((old(basePercent_ZumToken[this])) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF166_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF167_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) < (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF168_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF169_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF170_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) < (old(_totalSupply_ZumToken[this])));
ensures HoudiniF171_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF172_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(M_Ref_int[_balances_ZumToken[this]][to_s4483])));
ensures HoudiniF173_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (old(M_Ref_int[_balances_ZumToken[this]][to_s4483])));
ensures HoudiniF174_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(M_Ref_int[_balances_ZumToken[this]][to_s4483])));
ensures HoudiniF175_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (value_s4483));
ensures HoudiniF176_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (value_s4483));
ensures HoudiniF177_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (value_s4483));
ensures HoudiniF178_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF179_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF180_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF181_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) == (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF182_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF183_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF184_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF185_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF186_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF187_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (basePercent_ZumToken[this]));
ensures HoudiniF188_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (basePercent_ZumToken[this]));
ensures HoudiniF189_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF190_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF191_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF192_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF193_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF194_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF195_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF196_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF197_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF198_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF199_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (basePercent_ZumToken[this]));
ensures HoudiniF200_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (basePercent_ZumToken[this]));
ensures HoudiniF201_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (basePercent_ZumToken[this]));
ensures HoudiniF202_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF203_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF204_transfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF205_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF206_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF207_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF208_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF209_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF210_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF211_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF212_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (basePercent_ZumToken[this]));
ensures HoudiniF213_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (basePercent_ZumToken[this]));
ensures HoudiniF214_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF215_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF216_transfer_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF217_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF218_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF219_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF220_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) != (basePercent_ZumToken[this]));
ensures HoudiniF221_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) <= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF222_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) < (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF223_transfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF224_transfer_ZumToken ==> ((value_s4483) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF225_transfer_ZumToken ==> ((value_s4483) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF226_transfer_ZumToken ==> ((value_s4483) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF227_transfer_ZumToken ==> ((value_s4483) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF228_transfer_ZumToken ==> ((value_s4483) >= (basePercent_ZumToken[this]));
ensures HoudiniF229_transfer_ZumToken ==> ((value_s4483) > (basePercent_ZumToken[this]));
ensures HoudiniF230_transfer_ZumToken ==> ((value_s4483) != (basePercent_ZumToken[this]));
ensures HoudiniF231_transfer_ZumToken ==> ((value_s4483) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF232_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF233_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF234_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF235_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF236_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF237_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (basePercent_ZumToken[this]));
ensures HoudiniF238_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (basePercent_ZumToken[this]));
ensures HoudiniF239_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF240_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF241_transfer_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF242_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF243_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF244_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF245_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF246_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF247_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF248_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF249_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF250_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF251_transfer_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) != (basePercent_ZumToken[this]));
ensures HoudiniF252_transfer_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF253_transfer_ZumToken ==> ((basePercent_ZumToken[this]) <= (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF254_transfer_ZumToken ==> ((basePercent_ZumToken[this]) < (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF255_transfer_ZumToken ==> ((basePercent_ZumToken[this]) != (M_Ref_int[_balances_ZumToken[this]][to_s4483]));
ensures HoudiniF256_transfer_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF257_transfer_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF258_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF259_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF260_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF261_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF262_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF263_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF264_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF265_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF266_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF267_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF268_transfer_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF269_transfer_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF270_transfer_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF271_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF272_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF273_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF274_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF275_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF276_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF277_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF278_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF279_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF280_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF281_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF282_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF283_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF284_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF285_transfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF286_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF287_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF288_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF289_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF290_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF291_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF292_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF293_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF294_transfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF295_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF296_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF297_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF298_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF299_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF300_transfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF301_transfer_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF302_transfer_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF303_transfer_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation transfer_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, to_s4483: Ref, value_s4483: int) returns (__ret_0_: bool)
{
var __var_6: Ref;
var __var_7: Ref;
var __var_8: int;
var __var_9: int;
var __var_10: int;
var __var_11: int;
var __var_12: int;
var __var_13: int;
var __var_14: int;
var __var_15: int;
var __var_16: int;
var __var_17: int;
var __var_18: int;
var __var_19: int;
var __var_20: int;
var __var_21: int;
var __var_22: int;
var __var_23: int;
var __var_24: int;
var __var_25: int;
var __var_26: int;
var __var_27: int;
var __var_28: int;
var __var_29: int;
var __var_30: int;
var __var_31: int;
var __var_32: int;
var __var_33: int;
var __var_34: int;
var __var_35: int;
var __var_36: int;
var __var_37: int;
var __var_38: int;
var __var_39: int;
var __var_40: Ref;
var tokensToBurn_s4482: int;
var tokensToTransfer_s4482: int;
var __var_41: int;
var __var_42: int;
var __var_43: int;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "to"} boogie_si_record_sol2Bpl_ref(to_s4483);
call  {:cexpr "value"} boogie_si_record_sol2Bpl_int(value_s4483);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 184} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 186} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 187} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 188} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 189} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 190} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 191} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 192} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 193} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 194} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 195} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 196} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 197} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 198} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 199} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 200} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 201} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 202} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 203} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 204} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 205} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 206} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 207} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 208} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 209} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 210} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 211} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 212} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 213} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 214} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 215} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 216} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 217} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 218} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 219} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 220} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 221} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 222} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 223} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 224} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 225} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 226} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 227} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 228} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 229} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 232} (true);
__var_6 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 233} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 234} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 235} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 236} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 237} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 238} (true);
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 239} (true);
__var_7 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 240} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 241} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 242} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 243} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume (((basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 244} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume (((basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 245} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume (((basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 246} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 247} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 248} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 249} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((__var_8) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_8 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 250} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((__var_9) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_9 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 251} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((__var_10) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_10 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 252} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 253} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 254} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 255} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 256} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 257} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 258} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 259} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 260} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 261} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 262} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_11) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_11 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 263} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_12) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_12 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 264} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_13) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_13 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 265} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 266} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 267} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 268} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 269} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 270} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 271} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 272} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 273} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 274} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_14) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_14 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 275} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_15) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_15 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 276} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_16) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_16 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 277} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 278} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 279} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 280} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 281} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 282} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 283} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_17) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_17 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 284} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_18) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_18 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 285} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_19) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_19 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 286} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((__var_20) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_20 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 287} (true);
assume ((value_s4483) >= (0));
assume ((__var_21) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_21 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 288} (true);
assume ((value_s4483) >= (0));
assume ((__var_22) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_22 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 289} (true);
assume ((value_s4483) >= (0));
assume ((__var_23) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_23 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 290} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 291} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 292} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 293} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 294} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 295} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 296} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 297} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 298} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 299} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 300} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 301} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 302} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 303} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 304} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 305} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 306} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 307} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 308} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 309} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 310} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 311} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 312} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 313} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 314} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 315} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 316} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_24) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_24 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 317} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_25) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_25 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 318} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_26) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_26 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 319} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 320} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 321} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 322} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 323} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 324} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 325} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 326} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 327} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 328} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 329} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 330} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 331} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 332} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 333} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 334} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 335} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 336} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 337} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 338} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 339} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 340} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 341} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 342} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 343} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 344} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 345} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 346} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 347} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 348} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 349} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 350} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 351} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 352} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 353} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 354} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 355} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 356} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 357} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 358} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 359} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 360} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 361} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 362} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s4483) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 363} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_27) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_27 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 364} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_28) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_28 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 365} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_29) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_29 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 366} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 367} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 368} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 369} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 370} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 371} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 372} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 373} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 374} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 375} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 376} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 377} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 378} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 379} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 380} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 381} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 382} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 383} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 384} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 385} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 386} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 387} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 388} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 389} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 390} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 391} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 392} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 393} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 394} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 395} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 396} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 397} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 398} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 399} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 400} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 401} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 402} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 403} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 404} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 405} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 406} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 407} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 408} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s4483])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 409} (true);
assume ((value_s4483) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 410} (true);
assume ((value_s4483) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 411} (true);
assume ((value_s4483) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 412} (true);
assume ((value_s4483) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 413} (true);
assume ((value_s4483) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 414} (true);
assume ((value_s4483) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 415} (true);
assume ((value_s4483) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 416} (true);
assume ((value_s4483) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 417} (true);
assume ((__var_30) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_30 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 418} (true);
assume ((__var_31) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_31 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 419} (true);
assume ((__var_32) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_32 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 420} (true);
assume ((__var_33) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_33 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 421} (true);
assume ((__var_34) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_34 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 422} (true);
assume ((__var_35) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_35 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 423} (true);
assume ((__var_36) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_36 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 424} (true);
assume ((__var_37) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_37 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 425} (true);
assume ((__var_38) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_38 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 426} (true);
assume ((__var_39) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_39 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 427} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 428} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 429} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 430} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 431} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 432} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 433} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 434} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 435} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 436} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 437} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 438} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 439} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 440} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 441} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 442} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 443} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 444} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 445} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 446} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 447} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 448} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 449} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 450} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 451} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 452} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 453} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 454} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 455} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 456} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 457} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 458} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 459} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 460} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 461} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 462} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 463} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 464} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 465} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 466} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 467} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 468} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 469} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 470} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 471} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 472} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 473} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 474} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 475} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 476} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 477} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 478} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 479} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 480} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 481} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 482} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 483} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 484} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 485} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 486} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 487} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 488} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 489} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 490} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 492} (true);
assume ((value_s4483) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((value_s4483) <= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 493} (true);
__var_40 := null;
assume ((to_s4483) != (null));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 494} (true);
assume ((tokensToBurn_s4482) >= (0));
assume ((value_s4483) >= (0));
call tokensToBurn_s4482 := cut_ZumToken(this, msgsender_MSG, msgvalue_MSG, value_s4483);
tokensToBurn_s4482 := tokensToBurn_s4482;
call  {:cexpr "tokensToBurn"} boogie_si_record_sol2Bpl_int(tokensToBurn_s4482);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 495} (true);
assume ((tokensToTransfer_s4482) >= (0));
assume ((value_s4483) >= (0));
assume ((tokensToBurn_s4482) >= (0));
call tokensToTransfer_s4482 := sub_SafeMath(this, this, 0, value_s4483, tokensToBurn_s4482);
tokensToTransfer_s4482 := tokensToTransfer_s4482;
call  {:cexpr "tokensToTransfer"} boogie_si_record_sol2Bpl_int(tokensToTransfer_s4482);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 496} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((value_s4483) >= (0));
call __var_41 := sub_SafeMath(this, this, 0, M_Ref_int[_balances_ZumToken[this]][msgsender_MSG], value_s4483);
M_Ref_int[_balances_ZumToken[this]][msgsender_MSG] := __var_41;
assume ((__var_41) >= (0));
call  {:cexpr "_balances[msg.sender]"} boogie_si_record_sol2Bpl_int(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 497} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s4483]) >= (0));
assume ((tokensToTransfer_s4482) >= (0));
call __var_42 := add_SafeMath(this, this, 0, M_Ref_int[_balances_ZumToken[this]][to_s4483], tokensToTransfer_s4482);
M_Ref_int[_balances_ZumToken[this]][to_s4483] := __var_42;
assume ((__var_42) >= (0));
call  {:cexpr "_balances[to]"} boogie_si_record_sol2Bpl_int(M_Ref_int[_balances_ZumToken[this]][to_s4483]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 498} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((tokensToBurn_s4482) >= (0));
call __var_43 := sub_SafeMath(this, this, 0, _totalSupply_ZumToken[this], tokensToBurn_s4482);
_totalSupply_ZumToken[this] := __var_43;
assume ((__var_43) >= (0));
call  {:cexpr "_totalSupply"} boogie_si_record_sol2Bpl_int(_totalSupply_ZumToken[this]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 499} (true);
assert {:EventEmitted "Transfer_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 500} (true);
assert {:EventEmitted "Transfer_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 501} (true);
__ret_0_ := true;
return;
}

const {:existential true} HoudiniF304_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF305_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF306_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF307_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF308_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF309_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF310_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF311_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF312_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF313_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF314_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF315_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF316_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF317_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF318_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF319_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF320_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF321_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF322_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF323_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF324_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF325_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF326_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF327_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF328_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF329_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF330_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF331_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF332_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF333_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF334_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF335_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF336_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF337_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF338_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF339_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF340_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF341_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF342_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF343_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF344_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF345_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF346_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF347_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF348_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF349_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF350_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF351_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF352_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF353_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF354_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF355_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF356_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF357_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF358_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF359_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF360_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF361_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF362_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF363_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF364_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF365_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF366_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF367_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF368_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF369_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF370_multiTransfer_ZumToken: bool;
const {:existential true} HoudiniF371_multiTransfer_ZumToken: bool;
procedure {:public} {:inline 1} multiTransfer_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, receivers_s5618: Ref, amounts_s5618: Ref);
requires HoudiniF304_multiTransfer_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF305_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF306_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF307_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF308_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF309_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF310_multiTransfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF311_multiTransfer_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF312_multiTransfer_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF313_multiTransfer_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF314_multiTransfer_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF315_multiTransfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF316_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF317_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF318_multiTransfer_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF319_multiTransfer_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF320_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF321_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF322_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF323_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF324_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF325_multiTransfer_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF326_multiTransfer_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF327_multiTransfer_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF328_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF329_multiTransfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF330_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF331_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF332_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF333_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF334_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF335_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF336_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF337_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF338_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF339_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF340_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF341_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF342_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF343_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF344_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF345_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF346_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF347_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF348_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF349_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF350_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF351_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF352_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF353_multiTransfer_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF354_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF355_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF356_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF357_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF358_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF359_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF360_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF361_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF362_multiTransfer_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF363_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF364_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF365_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF366_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF367_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF368_multiTransfer_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF369_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF370_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF371_multiTransfer_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation multiTransfer_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, receivers_s5618: Ref, amounts_s5618: Ref)
{
var __var_44: int;
var __var_45: int;
var __var_46: int;
var __var_47: Ref;
var i_s5616: int;
var __var_48: bool;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 504} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 506} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 507} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 508} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 509} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 510} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 511} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 512} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 513} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 514} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 515} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 516} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 517} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 518} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 519} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 520} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 521} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 522} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 523} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 524} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 525} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 526} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 527} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 528} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 529} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 530} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 531} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 532} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 533} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 534} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 535} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 536} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 537} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 538} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 539} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 540} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 541} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 542} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 543} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 544} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 545} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 546} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 547} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 548} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 549} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 552} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_44) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_44 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 553} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_45) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_45 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 554} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_46) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_46 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 555} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 556} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 557} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 558} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 559} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 560} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 561} (true);
__var_47 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 562} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 563} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 564} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 565} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 566} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 567} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 568} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 569} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 570} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 571} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 572} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 573} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 574} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 575} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 576} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 577} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 578} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 579} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 580} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 581} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 582} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 583} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 584} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 585} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 586} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 587} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 588} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 589} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 590} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 591} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 592} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 593} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 594} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 595} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 596} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 597} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 598} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 599} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 600} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 601} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 602} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 603} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 604} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 605} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 606} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 607} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 608} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 609} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 610} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 611} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 612} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 613} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 614} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 615} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 616} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 617} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 618} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 619} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 621} (true);
assume ((i_s5616) >= (0));
assume ((Length[receivers_s5618]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 621} (true);
assume ((i_s5616) >= (0));
i_s5616 := 0;
call  {:cexpr "i"} boogie_si_record_sol2Bpl_int(i_s5616);
while ((i_s5616) < (Length[receivers_s5618]))
{
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 621} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 622} (true);
assume ((i_s5616) >= (0));
assume ((i_s5616) >= (0));
assume ((M_int_int[amounts_s5618][i_s5616]) >= (0));
if ((DType[this]) == (ZumToken)) {
call __var_48 := transfer_ZumToken(this, msgsender_MSG, msgvalue_MSG, M_int_Ref[receivers_s5618][i_s5616], M_int_int[amounts_s5618][i_s5616]);
} else {
assume (false);
}
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 621} (true);
assume ((i_s5616) >= (0));
i_s5616 := (i_s5616) + (1);
call  {:cexpr "i"} boogie_si_record_sol2Bpl_int(i_s5616);
assume ((i_s5616) >= (0));
}
}

const {:existential true} HoudiniF372_approve_ZumToken: bool;
const {:existential true} HoudiniF373_approve_ZumToken: bool;
const {:existential true} HoudiniF374_approve_ZumToken: bool;
const {:existential true} HoudiniF375_approve_ZumToken: bool;
const {:existential true} HoudiniF376_approve_ZumToken: bool;
const {:existential true} HoudiniF377_approve_ZumToken: bool;
const {:existential true} HoudiniF378_approve_ZumToken: bool;
const {:existential true} HoudiniF379_approve_ZumToken: bool;
const {:existential true} HoudiniF380_approve_ZumToken: bool;
const {:existential true} HoudiniF381_approve_ZumToken: bool;
const {:existential true} HoudiniF382_approve_ZumToken: bool;
const {:existential true} HoudiniF383_approve_ZumToken: bool;
const {:existential true} HoudiniF384_approve_ZumToken: bool;
const {:existential true} HoudiniF385_approve_ZumToken: bool;
const {:existential true} HoudiniF386_approve_ZumToken: bool;
const {:existential true} HoudiniF387_approve_ZumToken: bool;
const {:existential true} HoudiniF388_approve_ZumToken: bool;
const {:existential true} HoudiniF389_approve_ZumToken: bool;
const {:existential true} HoudiniF390_approve_ZumToken: bool;
const {:existential true} HoudiniF391_approve_ZumToken: bool;
const {:existential true} HoudiniF392_approve_ZumToken: bool;
const {:existential true} HoudiniF393_approve_ZumToken: bool;
const {:existential true} HoudiniF394_approve_ZumToken: bool;
const {:existential true} HoudiniF395_approve_ZumToken: bool;
const {:existential true} HoudiniF396_approve_ZumToken: bool;
const {:existential true} HoudiniF397_approve_ZumToken: bool;
const {:existential true} HoudiniF398_approve_ZumToken: bool;
const {:existential true} HoudiniF399_approve_ZumToken: bool;
const {:existential true} HoudiniF400_approve_ZumToken: bool;
const {:existential true} HoudiniF401_approve_ZumToken: bool;
const {:existential true} HoudiniF402_approve_ZumToken: bool;
const {:existential true} HoudiniF403_approve_ZumToken: bool;
const {:existential true} HoudiniF404_approve_ZumToken: bool;
const {:existential true} HoudiniF405_approve_ZumToken: bool;
const {:existential true} HoudiniF406_approve_ZumToken: bool;
const {:existential true} HoudiniF407_approve_ZumToken: bool;
const {:existential true} HoudiniF408_approve_ZumToken: bool;
const {:existential true} HoudiniF409_approve_ZumToken: bool;
const {:existential true} HoudiniF410_approve_ZumToken: bool;
const {:existential true} HoudiniF411_approve_ZumToken: bool;
const {:existential true} HoudiniF412_approve_ZumToken: bool;
const {:existential true} HoudiniF413_approve_ZumToken: bool;
const {:existential true} HoudiniF414_approve_ZumToken: bool;
const {:existential true} HoudiniF415_approve_ZumToken: bool;
const {:existential true} HoudiniF416_approve_ZumToken: bool;
const {:existential true} HoudiniF417_approve_ZumToken: bool;
const {:existential true} HoudiniF418_approve_ZumToken: bool;
const {:existential true} HoudiniF419_approve_ZumToken: bool;
const {:existential true} HoudiniF420_approve_ZumToken: bool;
const {:existential true} HoudiniF421_approve_ZumToken: bool;
const {:existential true} HoudiniF422_approve_ZumToken: bool;
const {:existential true} HoudiniF423_approve_ZumToken: bool;
const {:existential true} HoudiniF424_approve_ZumToken: bool;
const {:existential true} HoudiniF425_approve_ZumToken: bool;
const {:existential true} HoudiniF426_approve_ZumToken: bool;
const {:existential true} HoudiniF427_approve_ZumToken: bool;
const {:existential true} HoudiniF428_approve_ZumToken: bool;
const {:existential true} HoudiniF429_approve_ZumToken: bool;
const {:existential true} HoudiniF430_approve_ZumToken: bool;
const {:existential true} HoudiniF431_approve_ZumToken: bool;
const {:existential true} HoudiniF432_approve_ZumToken: bool;
const {:existential true} HoudiniF433_approve_ZumToken: bool;
const {:existential true} HoudiniF434_approve_ZumToken: bool;
const {:existential true} HoudiniF435_approve_ZumToken: bool;
const {:existential true} HoudiniF436_approve_ZumToken: bool;
const {:existential true} HoudiniF437_approve_ZumToken: bool;
const {:existential true} HoudiniF438_approve_ZumToken: bool;
const {:existential true} HoudiniF439_approve_ZumToken: bool;
const {:existential true} HoudiniF440_approve_ZumToken: bool;
const {:existential true} HoudiniF441_approve_ZumToken: bool;
const {:existential true} HoudiniF442_approve_ZumToken: bool;
const {:existential true} HoudiniF443_approve_ZumToken: bool;
const {:existential true} HoudiniF444_approve_ZumToken: bool;
const {:existential true} HoudiniF445_approve_ZumToken: bool;
const {:existential true} HoudiniF446_approve_ZumToken: bool;
const {:existential true} HoudiniF447_approve_ZumToken: bool;
const {:existential true} HoudiniF448_approve_ZumToken: bool;
const {:existential true} HoudiniF449_approve_ZumToken: bool;
const {:existential true} HoudiniF450_approve_ZumToken: bool;
const {:existential true} HoudiniF451_approve_ZumToken: bool;
const {:existential true} HoudiniF452_approve_ZumToken: bool;
const {:existential true} HoudiniF453_approve_ZumToken: bool;
const {:existential true} HoudiniF454_approve_ZumToken: bool;
const {:existential true} HoudiniF455_approve_ZumToken: bool;
const {:existential true} HoudiniF456_approve_ZumToken: bool;
const {:existential true} HoudiniF457_approve_ZumToken: bool;
const {:existential true} HoudiniF458_approve_ZumToken: bool;
const {:existential true} HoudiniF459_approve_ZumToken: bool;
const {:existential true} HoudiniF460_approve_ZumToken: bool;
const {:existential true} HoudiniF461_approve_ZumToken: bool;
const {:existential true} HoudiniF462_approve_ZumToken: bool;
const {:existential true} HoudiniF463_approve_ZumToken: bool;
const {:existential true} HoudiniF464_approve_ZumToken: bool;
const {:existential true} HoudiniF465_approve_ZumToken: bool;
const {:existential true} HoudiniF466_approve_ZumToken: bool;
const {:existential true} HoudiniF467_approve_ZumToken: bool;
const {:existential true} HoudiniF468_approve_ZumToken: bool;
const {:existential true} HoudiniF469_approve_ZumToken: bool;
const {:existential true} HoudiniF470_approve_ZumToken: bool;
const {:existential true} HoudiniF471_approve_ZumToken: bool;
const {:existential true} HoudiniF472_approve_ZumToken: bool;
const {:existential true} HoudiniF473_approve_ZumToken: bool;
const {:existential true} HoudiniF474_approve_ZumToken: bool;
const {:existential true} HoudiniF475_approve_ZumToken: bool;
const {:existential true} HoudiniF476_approve_ZumToken: bool;
const {:existential true} HoudiniF477_approve_ZumToken: bool;
const {:existential true} HoudiniF478_approve_ZumToken: bool;
const {:existential true} HoudiniF479_approve_ZumToken: bool;
const {:existential true} HoudiniF480_approve_ZumToken: bool;
const {:existential true} HoudiniF481_approve_ZumToken: bool;
const {:existential true} HoudiniF482_approve_ZumToken: bool;
const {:existential true} HoudiniF483_approve_ZumToken: bool;
const {:existential true} HoudiniF484_approve_ZumToken: bool;
const {:existential true} HoudiniF485_approve_ZumToken: bool;
const {:existential true} HoudiniF486_approve_ZumToken: bool;
const {:existential true} HoudiniF487_approve_ZumToken: bool;
const {:existential true} HoudiniF488_approve_ZumToken: bool;
const {:existential true} HoudiniF489_approve_ZumToken: bool;
const {:existential true} HoudiniF490_approve_ZumToken: bool;
const {:existential true} HoudiniF491_approve_ZumToken: bool;
const {:existential true} HoudiniF492_approve_ZumToken: bool;
const {:existential true} HoudiniF493_approve_ZumToken: bool;
const {:existential true} HoudiniF494_approve_ZumToken: bool;
const {:existential true} HoudiniF495_approve_ZumToken: bool;
const {:existential true} HoudiniF496_approve_ZumToken: bool;
const {:existential true} HoudiniF497_approve_ZumToken: bool;
const {:existential true} HoudiniF498_approve_ZumToken: bool;
const {:existential true} HoudiniF499_approve_ZumToken: bool;
const {:existential true} HoudiniF500_approve_ZumToken: bool;
const {:existential true} HoudiniF501_approve_ZumToken: bool;
const {:existential true} HoudiniF502_approve_ZumToken: bool;
const {:existential true} HoudiniF503_approve_ZumToken: bool;
const {:existential true} HoudiniF504_approve_ZumToken: bool;
const {:existential true} HoudiniF505_approve_ZumToken: bool;
const {:existential true} HoudiniF506_approve_ZumToken: bool;
const {:existential true} HoudiniF507_approve_ZumToken: bool;
const {:existential true} HoudiniF508_approve_ZumToken: bool;
const {:existential true} HoudiniF509_approve_ZumToken: bool;
const {:existential true} HoudiniF510_approve_ZumToken: bool;
const {:existential true} HoudiniF511_approve_ZumToken: bool;
const {:existential true} HoudiniF512_approve_ZumToken: bool;
const {:existential true} HoudiniF513_approve_ZumToken: bool;
const {:existential true} HoudiniF514_approve_ZumToken: bool;
const {:existential true} HoudiniF515_approve_ZumToken: bool;
const {:existential true} HoudiniF516_approve_ZumToken: bool;
const {:existential true} HoudiniF517_approve_ZumToken: bool;
const {:existential true} HoudiniF518_approve_ZumToken: bool;
const {:existential true} HoudiniF519_approve_ZumToken: bool;
const {:existential true} HoudiniF520_approve_ZumToken: bool;
const {:existential true} HoudiniF521_approve_ZumToken: bool;
const {:existential true} HoudiniF522_approve_ZumToken: bool;
const {:existential true} HoudiniF523_approve_ZumToken: bool;
const {:existential true} HoudiniF524_approve_ZumToken: bool;
const {:existential true} HoudiniF525_approve_ZumToken: bool;
const {:existential true} HoudiniF526_approve_ZumToken: bool;
const {:existential true} HoudiniF527_approve_ZumToken: bool;
const {:existential true} HoudiniF528_approve_ZumToken: bool;
const {:existential true} HoudiniF529_approve_ZumToken: bool;
const {:existential true} HoudiniF530_approve_ZumToken: bool;
const {:existential true} HoudiniF531_approve_ZumToken: bool;
const {:existential true} HoudiniF532_approve_ZumToken: bool;
const {:existential true} HoudiniF533_approve_ZumToken: bool;
const {:existential true} HoudiniF534_approve_ZumToken: bool;
const {:existential true} HoudiniF535_approve_ZumToken: bool;
const {:existential true} HoudiniF536_approve_ZumToken: bool;
const {:existential true} HoudiniF537_approve_ZumToken: bool;
const {:existential true} HoudiniF538_approve_ZumToken: bool;
const {:existential true} HoudiniF539_approve_ZumToken: bool;
const {:existential true} HoudiniF540_approve_ZumToken: bool;
const {:existential true} HoudiniF541_approve_ZumToken: bool;
const {:existential true} HoudiniF542_approve_ZumToken: bool;
const {:existential true} HoudiniF543_approve_ZumToken: bool;
const {:existential true} HoudiniF544_approve_ZumToken: bool;
const {:existential true} HoudiniF545_approve_ZumToken: bool;
const {:existential true} HoudiniF546_approve_ZumToken: bool;
const {:existential true} HoudiniF547_approve_ZumToken: bool;
const {:existential true} HoudiniF548_approve_ZumToken: bool;
const {:existential true} HoudiniF549_approve_ZumToken: bool;
const {:existential true} HoudiniF550_approve_ZumToken: bool;
const {:existential true} HoudiniF551_approve_ZumToken: bool;
const {:existential true} HoudiniF552_approve_ZumToken: bool;
const {:existential true} HoudiniF553_approve_ZumToken: bool;
const {:existential true} HoudiniF554_approve_ZumToken: bool;
const {:existential true} HoudiniF555_approve_ZumToken: bool;
const {:existential true} HoudiniF556_approve_ZumToken: bool;
const {:existential true} HoudiniF557_approve_ZumToken: bool;
const {:existential true} HoudiniF558_approve_ZumToken: bool;
const {:existential true} HoudiniF559_approve_ZumToken: bool;
const {:existential true} HoudiniF560_approve_ZumToken: bool;
const {:existential true} HoudiniF561_approve_ZumToken: bool;
const {:existential true} HoudiniF562_approve_ZumToken: bool;
const {:existential true} HoudiniF563_approve_ZumToken: bool;
const {:existential true} HoudiniF564_approve_ZumToken: bool;
const {:existential true} HoudiniF565_approve_ZumToken: bool;
const {:existential true} HoudiniF566_approve_ZumToken: bool;
const {:existential true} HoudiniF567_approve_ZumToken: bool;
const {:existential true} HoudiniF568_approve_ZumToken: bool;
const {:existential true} HoudiniF569_approve_ZumToken: bool;
const {:existential true} HoudiniF570_approve_ZumToken: bool;
const {:existential true} HoudiniF571_approve_ZumToken: bool;
const {:existential true} HoudiniF572_approve_ZumToken: bool;
const {:existential true} HoudiniF573_approve_ZumToken: bool;
const {:existential true} HoudiniF574_approve_ZumToken: bool;
const {:existential true} HoudiniF575_approve_ZumToken: bool;
const {:existential true} HoudiniF576_approve_ZumToken: bool;
const {:existential true} HoudiniF577_approve_ZumToken: bool;
const {:existential true} HoudiniF578_approve_ZumToken: bool;
const {:existential true} HoudiniF579_approve_ZumToken: bool;
const {:existential true} HoudiniF580_approve_ZumToken: bool;
const {:existential true} HoudiniF581_approve_ZumToken: bool;
const {:existential true} HoudiniF582_approve_ZumToken: bool;
const {:existential true} HoudiniF583_approve_ZumToken: bool;
const {:existential true} HoudiniF584_approve_ZumToken: bool;
const {:existential true} HoudiniF585_approve_ZumToken: bool;
const {:existential true} HoudiniF586_approve_ZumToken: bool;
const {:existential true} HoudiniF587_approve_ZumToken: bool;
const {:existential true} HoudiniF588_approve_ZumToken: bool;
const {:existential true} HoudiniF589_approve_ZumToken: bool;
const {:existential true} HoudiniF590_approve_ZumToken: bool;
const {:existential true} HoudiniF591_approve_ZumToken: bool;
const {:existential true} HoudiniF592_approve_ZumToken: bool;
procedure {:public} {:inline 1} approve_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s8727: Ref, value_s8727: int) returns (__ret_0_: bool);
requires HoudiniF372_approve_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF373_approve_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF374_approve_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
requires HoudiniF375_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) == (0));
requires HoudiniF376_approve_ZumToken ==> ((spender_s8727) != (null));
requires HoudiniF377_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
requires HoudiniF378_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
requires HoudiniF379_approve_ZumToken ==> ((value_s8727) > (0));
requires HoudiniF380_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
requires HoudiniF381_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
requires HoudiniF382_approve_ZumToken ==> ((msgsender_MSG) != (spender_s8727));
requires HoudiniF383_approve_ZumToken ==> (((basePercent_ZumToken[this])) >= ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])));
requires HoudiniF384_approve_ZumToken ==> (((basePercent_ZumToken[this])) > ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])));
requires HoudiniF385_approve_ZumToken ==> (((basePercent_ZumToken[this])) != ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])));
requires HoudiniF386_approve_ZumToken ==> (((basePercent_ZumToken[this])) <= ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF387_approve_ZumToken ==> (((basePercent_ZumToken[this])) < ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF388_approve_ZumToken ==> (((basePercent_ZumToken[this])) != ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF389_approve_ZumToken ==> (((basePercent_ZumToken[this])) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF390_approve_ZumToken ==> (((basePercent_ZumToken[this])) < ((_totalSupply_ZumToken[this])));
requires HoudiniF391_approve_ZumToken ==> (((basePercent_ZumToken[this])) != ((_totalSupply_ZumToken[this])));
requires HoudiniF392_approve_ZumToken ==> (((basePercent_ZumToken[this])) <= (value_s8727));
requires HoudiniF393_approve_ZumToken ==> (((basePercent_ZumToken[this])) < (value_s8727));
requires HoudiniF394_approve_ZumToken ==> (((basePercent_ZumToken[this])) != (value_s8727));
requires HoudiniF395_approve_ZumToken ==> (((basePercent_ZumToken[this])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF396_approve_ZumToken ==> (((basePercent_ZumToken[this])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF397_approve_ZumToken ==> (((basePercent_ZumToken[this])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF398_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF399_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF400_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF401_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF402_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < ((_totalSupply_ZumToken[this])));
requires HoudiniF403_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != ((_totalSupply_ZumToken[this])));
requires HoudiniF404_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= (value_s8727));
requires HoudiniF405_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < (value_s8727));
requires HoudiniF406_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != (value_s8727));
requires HoudiniF407_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= ((_decimals_ERC20Detailed[this])));
requires HoudiniF408_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < ((_decimals_ERC20Detailed[this])));
requires HoudiniF409_approve_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF410_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) == ((_totalSupply_ZumToken[this])));
requires HoudiniF411_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((_totalSupply_ZumToken[this])));
requires HoudiniF412_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF413_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (value_s8727));
requires HoudiniF414_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF415_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF416_approve_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF417_approve_ZumToken ==> (((_totalSupply_ZumToken[this])) != (value_s8727));
requires HoudiniF418_approve_ZumToken ==> (((_totalSupply_ZumToken[this])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF419_approve_ZumToken ==> (((_totalSupply_ZumToken[this])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF420_approve_ZumToken ==> (((_totalSupply_ZumToken[this])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF421_approve_ZumToken ==> ((value_s8727) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF422_approve_ZumToken ==> ((value_s8727) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF423_approve_ZumToken ==> ((value_s8727) != ((_decimals_ERC20Detailed[this])));
ensures HoudiniF424_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF425_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF426_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF427_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) > (0));
ensures HoudiniF428_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF429_approve_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF430_approve_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF431_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(basePercent_ZumToken[this])));
ensures HoudiniF432_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(basePercent_ZumToken[this])));
ensures HoudiniF433_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(basePercent_ZumToken[this])));
ensures HoudiniF434_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])));
ensures HoudiniF435_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])));
ensures HoudiniF436_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])));
ensures HoudiniF437_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF438_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF439_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF440_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF441_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF442_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF443_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF444_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF445_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF446_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF447_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(_totalSupply_ZumToken[this])));
ensures HoudiniF448_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF449_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (value_s8727));
ensures HoudiniF450_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (value_s8727));
ensures HoudiniF451_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (value_s8727));
ensures HoudiniF452_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF453_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF454_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF455_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF456_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF457_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF458_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF459_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF460_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF461_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF462_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) < (_totalSupply_ZumToken[this]));
ensures HoudiniF463_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) != (_totalSupply_ZumToken[this]));
ensures HoudiniF464_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF465_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) < (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF466_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF467_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF468_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF469_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF470_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF471_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF472_approve_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF473_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF474_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < (_totalSupply_ZumToken[this]));
ensures HoudiniF475_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != (_totalSupply_ZumToken[this]));
ensures HoudiniF476_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF477_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF478_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF479_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF480_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF481_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF482_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) <= (basePercent_ZumToken[this]));
ensures HoudiniF483_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) < (basePercent_ZumToken[this]));
ensures HoudiniF484_approve_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) != (basePercent_ZumToken[this]));
ensures HoudiniF485_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF486_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF487_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF488_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF489_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF490_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF491_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF492_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) != (value_s8727));
ensures HoudiniF493_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF494_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) > (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF495_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF496_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) == (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF497_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF498_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF499_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (basePercent_ZumToken[this]));
ensures HoudiniF500_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) > (basePercent_ZumToken[this]));
ensures HoudiniF501_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF502_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]));
ensures HoudiniF503_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) == (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF504_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF505_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF506_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (basePercent_ZumToken[this]));
ensures HoudiniF507_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (basePercent_ZumToken[this]));
ensures HoudiniF508_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (basePercent_ZumToken[this]));
ensures HoudiniF509_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF510_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) == (value_s8727));
ensures HoudiniF511_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (value_s8727));
ensures HoudiniF512_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) <= (value_s8727));
ensures HoudiniF513_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF514_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) > (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF515_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) != (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF516_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF517_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (basePercent_ZumToken[this]));
ensures HoudiniF518_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) > (basePercent_ZumToken[this]));
ensures HoudiniF519_approve_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) != (basePercent_ZumToken[this]));
ensures HoudiniF520_approve_ZumToken ==> ((old(_totalSupply_ZumToken[this])) == (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF521_approve_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF522_approve_ZumToken ==> ((old(_totalSupply_ZumToken[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF523_approve_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF524_approve_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (basePercent_ZumToken[this]));
ensures HoudiniF525_approve_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (basePercent_ZumToken[this]));
ensures HoudiniF526_approve_ZumToken ==> ((value_s8727) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF527_approve_ZumToken ==> ((value_s8727) >= (basePercent_ZumToken[this]));
ensures HoudiniF528_approve_ZumToken ==> ((value_s8727) > (basePercent_ZumToken[this]));
ensures HoudiniF529_approve_ZumToken ==> ((value_s8727) != (basePercent_ZumToken[this]));
ensures HoudiniF530_approve_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF531_approve_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF532_approve_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF533_approve_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF534_approve_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (basePercent_ZumToken[this]));
ensures HoudiniF535_approve_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (basePercent_ZumToken[this]));
ensures HoudiniF536_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF537_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF538_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF539_approve_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF540_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF541_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF542_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF543_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF544_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF545_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF546_approve_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF547_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF548_approve_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF549_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF550_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF551_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF552_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF553_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF554_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF555_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF556_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF557_approve_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF558_approve_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF559_approve_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF560_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF561_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF562_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF563_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF564_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF565_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF566_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF567_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF568_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF569_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF570_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF571_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF572_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF573_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF574_approve_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF575_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF576_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF577_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF578_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF579_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF580_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF581_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF582_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF583_approve_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF584_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF585_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF586_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF587_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF588_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF589_approve_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF590_approve_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF591_approve_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF592_approve_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation approve_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s8727: Ref, value_s8727: int) returns (__ret_0_: bool)
{
var __var_49: Ref;
var __var_50: Ref;
var __var_51: int;
var __var_52: int;
var __var_53: int;
var __var_54: int;
var __var_55: int;
var __var_56: int;
var __var_57: int;
var __var_58: int;
var __var_59: int;
var __var_60: int;
var __var_61: int;
var __var_62: int;
var __var_63: int;
var __var_64: int;
var __var_65: int;
var __var_66: int;
var __var_67: int;
var __var_68: int;
var __var_69: int;
var __var_70: int;
var __var_71: int;
var __var_72: int;
var __var_73: int;
var __var_74: int;
var __var_75: int;
var __var_76: int;
var __var_77: int;
var __var_78: int;
var __var_79: int;
var __var_80: int;
var __var_81: Ref;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "spender"} boogie_si_record_sol2Bpl_ref(spender_s8727);
call  {:cexpr "value"} boogie_si_record_sol2Bpl_int(value_s8727);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 626} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 628} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 629} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 630} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 631} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 632} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 633} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 634} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 635} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 636} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 637} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 638} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 639} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 640} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 641} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 642} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 643} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 644} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 645} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 646} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 647} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 648} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 649} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 650} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 651} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 652} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 653} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 654} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 655} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 656} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 657} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 658} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 659} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 660} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 661} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 662} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 663} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 664} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 665} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 666} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 667} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 668} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 669} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 670} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 671} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 674} (true);
__var_49 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 675} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 676} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 677} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 678} (true);
__var_50 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 679} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 680} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 681} (true);
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 682} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 683} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 684} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 685} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 686} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 687} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 688} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 689} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 690} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 691} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 692} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 693} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 694} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 695} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 696} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 697} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_51) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_51 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 698} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_52) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_52 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 699} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_53) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_53 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 700} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 701} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 702} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 703} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 704} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 705} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 706} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 707} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 708} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 709} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((__var_54) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_54 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 710} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((__var_55) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_55 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 711} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((__var_56) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_56 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 712} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 713} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 714} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 715} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 716} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_57) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_57 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 717} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_58) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_58 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 718} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_59) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_59 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 719} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 720} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_60) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_60 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 721} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_61) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_61 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 722} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_62) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_62 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 723} (true);
assume ((value_s8727) >= (0));
assume ((__var_63) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_63 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 724} (true);
assume ((value_s8727) >= (0));
assume ((__var_64) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_64 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 725} (true);
assume ((value_s8727) >= (0));
assume ((__var_65) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_65 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 726} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 727} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 728} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 729} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 730} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 731} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 732} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 733} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 734} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 735} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 736} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 737} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 738} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 739} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 740} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 741} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 742} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 743} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 744} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 745} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 746} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 747} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 748} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 749} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 750} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 751} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 752} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 753} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 754} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_66) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_66 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 755} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_67) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_67 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 756} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_68) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_68 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 757} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 758} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 759} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 760} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 761} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 762} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 763} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 764} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 765} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 766} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 767} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 768} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 769} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 770} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 771} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 772} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 773} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 774} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 775} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 776} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 777} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 778} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 779} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 780} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 781} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 782} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 783} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 784} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 785} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 786} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 787} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 788} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 789} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 790} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 791} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 792} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 793} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 794} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 795} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_69) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_69 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 796} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_70) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_70 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 797} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_71) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_71 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 798} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 799} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 800} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 801} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 802} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 803} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 804} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 805} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 806} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 807} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 808} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 809} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 810} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 811} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 812} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 813} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 814} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((value_s8727) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 815} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((__var_72) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_72 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 816} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((__var_73) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_73 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 817} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((__var_74) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_74 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 818} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 819} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 820} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 821} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 822} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 823} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 824} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 825} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 826} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 827} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 828} (true);
assume ((value_s8727) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 829} (true);
assume ((value_s8727) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 830} (true);
assume ((value_s8727) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 831} (true);
assume ((value_s8727) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 832} (true);
assume ((__var_75) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_75 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 833} (true);
assume ((__var_76) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_76 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 834} (true);
assume ((__var_77) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_77 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 835} (true);
assume ((__var_78) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_78 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 836} (true);
assume ((__var_79) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_79 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 837} (true);
assume ((__var_80) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_80 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 838} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 839} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 840} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 841} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 842} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 843} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 844} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 845} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 846} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 847} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 848} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 849} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 850} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 851} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 852} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 853} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 854} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 855} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 856} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 857} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 858} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 859} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 860} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 861} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 862} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 863} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 864} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 865} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 866} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 867} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 868} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 869} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 870} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 871} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 872} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 873} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 874} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 875} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 876} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 877} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 878} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 879} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 880} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 881} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 882} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 883} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 884} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 885} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 886} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 887} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 888} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 889} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 890} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 891} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 892} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 893} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 894} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 896} (true);
__var_81 := null;
assume ((spender_s8727) != (null));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 897} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]) >= (0));
assume ((value_s8727) >= (0));
M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727] := value_s8727;
call  {:cexpr "_allowed[msg.sender][spender]"} boogie_si_record_sol2Bpl_int(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s8727]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 898} (true);
assert {:EventEmitted "Approval_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 899} (true);
__ret_0_ := true;
return;
}

const {:existential true} HoudiniF593_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF594_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF595_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF596_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF597_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF598_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF599_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF600_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF601_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF602_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF603_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF604_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF605_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF606_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF607_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF608_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF609_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF610_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF611_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF612_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF613_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF614_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF615_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF616_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF617_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF618_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF619_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF620_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF621_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF622_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF623_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF624_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF625_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF626_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF627_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF628_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF629_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF630_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF631_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF632_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF633_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF634_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF635_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF636_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF637_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF638_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF639_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF640_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF641_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF642_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF643_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF644_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF645_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF646_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF647_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF648_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF649_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF650_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF651_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF652_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF653_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF654_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF655_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF656_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF657_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF658_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF659_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF660_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF661_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF662_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF663_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF664_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF665_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF666_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF667_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF668_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF669_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF670_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF671_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF672_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF673_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF674_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF675_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF676_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF677_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF678_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF679_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF680_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF681_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF682_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF683_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF684_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF685_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF686_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF687_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF688_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF689_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF690_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF691_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF692_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF693_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF694_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF695_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF696_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF697_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF698_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF699_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF700_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF701_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF702_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF703_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF704_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF705_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF706_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF707_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF708_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF709_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF710_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF711_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF712_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF713_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF714_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF715_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF716_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF717_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF718_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF719_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF720_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF721_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF722_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF723_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF724_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF725_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF726_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF727_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF728_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF729_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF730_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF731_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF732_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF733_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF734_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF735_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF736_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF737_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF738_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF739_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF740_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF741_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF742_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF743_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF744_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF745_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF746_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF747_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF748_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF749_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF750_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF751_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF752_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF753_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF754_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF755_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF756_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF757_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF758_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF759_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF760_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF761_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF762_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF763_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF764_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF765_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF766_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF767_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF768_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF769_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF770_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF771_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF772_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF773_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF774_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF775_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF776_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF777_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF778_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF779_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF780_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF781_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF782_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF783_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF784_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF785_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF786_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF787_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF788_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF789_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF790_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF791_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF792_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF793_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF794_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF795_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF796_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF797_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF798_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF799_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF800_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF801_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF802_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF803_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF804_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF805_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF806_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF807_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF808_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF809_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF810_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF811_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF812_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF813_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF814_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF815_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF816_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF817_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF818_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF819_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF820_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF821_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF822_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF823_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF824_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF825_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF826_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF827_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF828_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF829_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF830_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF831_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF832_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF833_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF834_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF835_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF836_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF837_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF838_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF839_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF840_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF841_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF842_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF843_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF844_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF845_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF846_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF847_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF848_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF849_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF850_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF851_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF852_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF853_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF854_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF855_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF856_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF857_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF858_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF859_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF860_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF861_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF862_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF863_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF864_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF865_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF866_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF867_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF868_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF869_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF870_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF871_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF872_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF873_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF874_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF875_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF876_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF877_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF878_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF879_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF880_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF881_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF882_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF883_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF884_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF885_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF886_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF887_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF888_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF889_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF890_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF891_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF892_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF893_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF894_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF895_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF896_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF897_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF898_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF899_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF900_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF901_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF902_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF903_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF904_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF905_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF906_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF907_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF908_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF909_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF910_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF911_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF912_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF913_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF914_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF915_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF916_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF917_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF918_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF919_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF920_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF921_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF922_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF923_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF924_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF925_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF926_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF927_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF928_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF929_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF930_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF931_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF932_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF933_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF934_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF935_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF936_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF937_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF938_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF939_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF940_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF941_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF942_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF943_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF944_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF945_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF946_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF947_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF948_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF949_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF950_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF951_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF952_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF953_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF954_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF955_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF956_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF957_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF958_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF959_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF960_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF961_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF962_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF963_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF964_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF965_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF966_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF967_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF968_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF969_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF970_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF971_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF972_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF973_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF974_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF975_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF976_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF977_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF978_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF979_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF980_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF981_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF982_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF983_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF984_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF985_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF986_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF987_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF988_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF989_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF990_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF991_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF992_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF993_transferFrom_ZumToken: bool;
const {:existential true} HoudiniF994_transferFrom_ZumToken: bool;
procedure {:public} {:inline 1} transferFrom_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, from_s14302: Ref, to_s14302: Ref, value_s14302: int) returns (__ret_0_: bool);
requires HoudiniF593_transferFrom_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF594_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF595_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
requires HoudiniF596_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) > (0));
requires HoudiniF597_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) == (900000000));
requires HoudiniF598_transferFrom_ZumToken ==> ((from_s14302) != (null));
requires HoudiniF599_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
requires HoudiniF600_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (9999773100090000000));
requires HoudiniF601_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
requires HoudiniF602_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) == (9999773100090000000));
requires HoudiniF603_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) > (0));
requires HoudiniF604_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) == (900000000));
requires HoudiniF605_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) == (0));
requires HoudiniF606_transferFrom_ZumToken ==> ((value_s14302) > (0));
requires HoudiniF607_transferFrom_ZumToken ==> ((value_s14302) == (900000000));
requires HoudiniF608_transferFrom_ZumToken ==> ((to_s14302) != (null));
requires HoudiniF609_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
requires HoudiniF610_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
requires HoudiniF611_transferFrom_ZumToken ==> ((msgsender_MSG) != (from_s14302));
requires HoudiniF612_transferFrom_ZumToken ==> ((msgsender_MSG) == (to_s14302));
requires HoudiniF613_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) <= ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
requires HoudiniF614_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) < ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
requires HoudiniF615_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
requires HoudiniF616_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) <= ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF617_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) < ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF618_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF619_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF620_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) < ((_totalSupply_ZumToken[this])));
requires HoudiniF621_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != ((_totalSupply_ZumToken[this])));
requires HoudiniF622_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) <= ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF623_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) < ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF624_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF625_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) >= ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF626_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) > ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF627_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF628_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) <= (value_s14302));
requires HoudiniF629_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) < (value_s14302));
requires HoudiniF630_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != (value_s14302));
requires HoudiniF631_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF632_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF633_transferFrom_ZumToken ==> (((basePercent_ZumToken[this])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF634_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) <= ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF635_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) < ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF636_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
requires HoudiniF637_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF638_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) < ((_totalSupply_ZumToken[this])));
requires HoudiniF639_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != ((_totalSupply_ZumToken[this])));
requires HoudiniF640_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) == ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF641_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF642_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) <= ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF643_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF644_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) > ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF645_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF646_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) == (value_s14302));
requires HoudiniF647_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (value_s14302));
requires HoudiniF648_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) <= (value_s14302));
requires HoudiniF649_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF650_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF651_transferFrom_ZumToken ==> (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF652_transferFrom_ZumToken ==> ((from_s14302) != (to_s14302));
requires HoudiniF653_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) == ((_totalSupply_ZumToken[this])));
requires HoudiniF654_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((_totalSupply_ZumToken[this])));
requires HoudiniF655_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) <= ((_totalSupply_ZumToken[this])));
requires HoudiniF656_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF657_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF658_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF659_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF660_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF661_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF662_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (value_s14302));
requires HoudiniF663_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (value_s14302));
requires HoudiniF664_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (value_s14302));
requires HoudiniF665_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF666_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF667_transferFrom_ZumToken ==> (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF668_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) >= ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF669_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) > ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF670_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) != ((M_Ref_int[_balances_ZumToken[this]][from_s14302])));
requires HoudiniF671_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) >= ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF672_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) > ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF673_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) != ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF674_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) >= (value_s14302));
requires HoudiniF675_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) > (value_s14302));
requires HoudiniF676_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) != (value_s14302));
requires HoudiniF677_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF678_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF679_transferFrom_ZumToken ==> (((_totalSupply_ZumToken[this])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF680_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF681_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) > ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF682_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) != ((M_Ref_int[_balances_ZumToken[this]][to_s14302])));
requires HoudiniF683_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) == (value_s14302));
requires HoudiniF684_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (value_s14302));
requires HoudiniF685_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) <= (value_s14302));
requires HoudiniF686_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF687_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF688_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF689_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) <= (value_s14302));
requires HoudiniF690_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) < (value_s14302));
requires HoudiniF691_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) != (value_s14302));
requires HoudiniF692_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) <= ((_decimals_ERC20Detailed[this])));
requires HoudiniF693_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) < ((_decimals_ERC20Detailed[this])));
requires HoudiniF694_transferFrom_ZumToken ==> (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) != ((_decimals_ERC20Detailed[this])));
requires HoudiniF695_transferFrom_ZumToken ==> ((value_s14302) >= ((_decimals_ERC20Detailed[this])));
requires HoudiniF696_transferFrom_ZumToken ==> ((value_s14302) > ((_decimals_ERC20Detailed[this])));
requires HoudiniF697_transferFrom_ZumToken ==> ((value_s14302) != ((_decimals_ERC20Detailed[this])));
ensures HoudiniF698_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF699_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF700_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) == (0));
ensures HoudiniF701_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF702_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) == (9999773100000000000));
ensures HoudiniF703_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) == (0));
ensures HoudiniF704_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF705_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (9999773100000000000));
ensures HoudiniF706_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF707_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF708_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) > (0));
ensures HoudiniF709_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) == (810000000));
ensures HoudiniF710_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (M_Ref_int[_balances_ZumToken[this]][from_s14302]));
ensures HoudiniF711_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (M_Ref_int[_balances_ZumToken[this]][from_s14302]));
ensures HoudiniF712_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (M_Ref_int[_balances_ZumToken[this]][from_s14302]));
ensures HoudiniF713_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(basePercent_ZumToken[this])));
ensures HoudiniF714_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(basePercent_ZumToken[this])));
ensures HoudiniF715_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(basePercent_ZumToken[this])));
ensures HoudiniF716_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
ensures HoudiniF717_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
ensures HoudiniF718_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
ensures HoudiniF719_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF720_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF721_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF722_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF723_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF724_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF725_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF726_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(_totalSupply_ZumToken[this])));
ensures HoudiniF727_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF728_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF729_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF730_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF731_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF732_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF733_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF734_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (value_s14302));
ensures HoudiniF735_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (value_s14302));
ensures HoudiniF736_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (value_s14302));
ensures HoudiniF737_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF738_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF739_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF740_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF741_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF742_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF743_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF744_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF745_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF746_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF747_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF748_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF749_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF750_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF751_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF752_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(basePercent_ZumToken[this])));
ensures HoudiniF753_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (old(basePercent_ZumToken[this])));
ensures HoudiniF754_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (old(basePercent_ZumToken[this])));
ensures HoudiniF755_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
ensures HoudiniF756_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
ensures HoudiniF757_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])));
ensures HoudiniF758_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF759_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF760_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF761_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF762_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF763_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF764_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF765_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (old(_totalSupply_ZumToken[this])));
ensures HoudiniF766_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF767_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF768_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF769_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF770_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) == (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF771_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF772_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF773_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (value_s14302));
ensures HoudiniF774_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (value_s14302));
ensures HoudiniF775_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (value_s14302));
ensures HoudiniF776_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) == (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF777_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF778_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF779_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF780_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF781_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF782_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF783_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF784_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF785_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (basePercent_ZumToken[this]));
ensures HoudiniF786_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (basePercent_ZumToken[this]));
ensures HoudiniF787_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (basePercent_ZumToken[this]));
ensures HoudiniF788_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF789_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF790_transferFrom_ZumToken ==> ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF791_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF792_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) < (_totalSupply_ZumToken[this]));
ensures HoudiniF793_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) != (_totalSupply_ZumToken[this]));
ensures HoudiniF794_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF795_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF796_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF797_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF798_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF799_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF800_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF801_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF802_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF803_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF804_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF805_transferFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF806_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF807_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) < (_totalSupply_ZumToken[this]));
ensures HoudiniF808_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != (_totalSupply_ZumToken[this]));
ensures HoudiniF809_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF810_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF811_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF812_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF813_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF814_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF815_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (basePercent_ZumToken[this]));
ensures HoudiniF816_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) > (basePercent_ZumToken[this]));
ensures HoudiniF817_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != (basePercent_ZumToken[this]));
ensures HoudiniF818_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF819_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF820_transferFrom_ZumToken ==> ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF821_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF822_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) < (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF823_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))));
ensures HoudiniF824_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF825_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) < (old(_totalSupply_ZumToken[this])));
ensures HoudiniF826_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF827_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF828_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF829_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(M_Ref_int[_balances_ZumToken[this]][from_s14302])));
ensures HoudiniF830_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF831_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF832_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(M_Ref_int[_balances_ZumToken[this]][to_s14302])));
ensures HoudiniF833_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (value_s14302));
ensures HoudiniF834_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (value_s14302));
ensures HoudiniF835_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (value_s14302));
ensures HoudiniF836_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF837_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF838_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF839_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF840_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF841_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF842_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) == (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF843_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF844_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF845_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (basePercent_ZumToken[this]));
ensures HoudiniF846_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (basePercent_ZumToken[this]));
ensures HoudiniF847_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF848_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF849_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF850_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF851_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF852_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF853_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF854_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF855_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF856_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF857_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (basePercent_ZumToken[this]));
ensures HoudiniF858_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (basePercent_ZumToken[this]));
ensures HoudiniF859_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (basePercent_ZumToken[this]));
ensures HoudiniF860_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF861_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF862_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF863_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF864_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF865_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF866_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF867_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF868_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF869_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF870_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (basePercent_ZumToken[this]));
ensures HoudiniF871_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (basePercent_ZumToken[this]));
ensures HoudiniF872_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF873_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF874_transferFrom_ZumToken ==> ((old(_totalSupply_ZumToken[this])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF875_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF876_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF877_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF878_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF879_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF880_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF881_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (basePercent_ZumToken[this]));
ensures HoudiniF882_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) > (basePercent_ZumToken[this]));
ensures HoudiniF883_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) != (basePercent_ZumToken[this]));
ensures HoudiniF884_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF885_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF886_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF887_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) == (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF888_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF889_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF890_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF891_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF892_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF893_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) <= (basePercent_ZumToken[this]));
ensures HoudiniF894_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) < (basePercent_ZumToken[this]));
ensures HoudiniF895_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) != (basePercent_ZumToken[this]));
ensures HoudiniF896_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF897_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF898_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF899_transferFrom_ZumToken ==> ((value_s14302) >= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF900_transferFrom_ZumToken ==> ((value_s14302) > (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF901_transferFrom_ZumToken ==> ((value_s14302) != (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
ensures HoudiniF902_transferFrom_ZumToken ==> ((value_s14302) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF903_transferFrom_ZumToken ==> ((value_s14302) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF904_transferFrom_ZumToken ==> ((value_s14302) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF905_transferFrom_ZumToken ==> ((value_s14302) >= (basePercent_ZumToken[this]));
ensures HoudiniF906_transferFrom_ZumToken ==> ((value_s14302) > (basePercent_ZumToken[this]));
ensures HoudiniF907_transferFrom_ZumToken ==> ((value_s14302) != (basePercent_ZumToken[this]));
ensures HoudiniF908_transferFrom_ZumToken ==> ((value_s14302) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF909_transferFrom_ZumToken ==> ((value_s14302) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF910_transferFrom_ZumToken ==> ((value_s14302) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF911_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF912_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) < (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF913_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) != (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF914_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF915_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF916_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF917_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) <= (basePercent_ZumToken[this]));
ensures HoudiniF918_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) < (basePercent_ZumToken[this]));
ensures HoudiniF919_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) != (basePercent_ZumToken[this]));
ensures HoudiniF920_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF921_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF922_transferFrom_ZumToken ==> ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF923_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF924_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF925_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF926_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF927_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (basePercent_ZumToken[this]));
ensures HoudiniF928_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (basePercent_ZumToken[this]));
ensures HoudiniF929_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF930_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF931_transferFrom_ZumToken ==> ((old(_decimals_ERC20Detailed[this])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF932_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF933_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF934_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF935_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF936_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF937_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF938_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) <= (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF939_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) < (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF940_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) != (M_Ref_int[_balances_ZumToken[this]][to_s14302]));
ensures HoudiniF941_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF942_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF943_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF944_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF945_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF946_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF947_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF948_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF949_transferFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF950_transferFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF951_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF952_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF953_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF954_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF955_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF956_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF957_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF958_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF959_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF960_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF961_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF962_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF963_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF964_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF965_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF966_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF967_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF968_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF969_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF970_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF971_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF972_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF973_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF974_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF975_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF976_transferFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF977_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF978_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF979_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF980_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF981_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF982_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF983_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF984_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF985_transferFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF986_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF987_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF988_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF989_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF990_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF991_transferFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF992_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF993_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF994_transferFrom_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation transferFrom_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, from_s14302: Ref, to_s14302: Ref, value_s14302: int) returns (__ret_0_: bool)
{
var __var_82: Ref;
var __var_83: Ref;
var __var_84: Ref;
var __var_85: int;
var __var_86: int;
var __var_87: int;
var __var_88: int;
var __var_89: int;
var __var_90: int;
var __var_91: int;
var __var_92: int;
var __var_93: int;
var __var_94: int;
var __var_95: int;
var __var_96: int;
var __var_97: int;
var __var_98: int;
var __var_99: int;
var __var_100: int;
var __var_101: int;
var __var_102: int;
var __var_103: int;
var __var_104: int;
var __var_105: int;
var __var_106: int;
var __var_107: int;
var __var_108: int;
var __var_109: int;
var __var_110: int;
var __var_111: int;
var __var_112: int;
var __var_113: int;
var __var_114: int;
var __var_115: int;
var __var_116: int;
var __var_117: int;
var __var_118: int;
var __var_119: int;
var __var_120: int;
var __var_121: int;
var __var_122: int;
var __var_123: int;
var __var_124: int;
var __var_125: int;
var __var_126: int;
var __var_127: Ref;
var __var_128: int;
var tokensToBurn_s14301: int;
var tokensToTransfer_s14301: int;
var __var_129: int;
var __var_130: int;
var __var_131: int;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "from"} boogie_si_record_sol2Bpl_ref(from_s14302);
call  {:cexpr "to"} boogie_si_record_sol2Bpl_ref(to_s14302);
call  {:cexpr "value"} boogie_si_record_sol2Bpl_int(value_s14302);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 902} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 904} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 905} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 906} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 907} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 908} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 909} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 910} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 911} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 912} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 913} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 914} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 915} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 916} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 917} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 918} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 919} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 920} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 921} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 922} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 923} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 924} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 925} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 926} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 927} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 928} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 929} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 930} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 931} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 932} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 933} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 934} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 935} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 936} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 937} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 938} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 939} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 940} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 941} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 942} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 943} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 944} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 945} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 946} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 947} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 950} (true);
__var_82 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 951} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 952} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 953} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 954} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 955} (true);
__var_83 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 956} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 957} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 958} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 959} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 960} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 961} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 962} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 963} (true);
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 964} (true);
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 965} (true);
__var_84 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 966} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 967} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 968} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 969} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 970} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 971} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 972} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 973} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 974} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 975} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 976} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 977} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 978} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 979} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 980} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 981} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 982} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 983} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 984} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 985} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 986} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 987} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 988} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_85) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_85 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 989} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_86) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_86 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 990} (true);
assume (((basePercent_ZumToken[this])) >= (0));
assume ((__var_87) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_87 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 991} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 992} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 993} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 994} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 995} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 996} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 997} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 998} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 999} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1000} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1001} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1002} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1003} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1004} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1005} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1006} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((__var_88) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_88 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1007} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((__var_89) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_89 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1008} (true);
assume (((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((__var_90) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_90 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1009} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1010} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1011} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1012} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1013} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1014} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1015} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1016} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1017} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1018} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1019} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1020} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1021} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1022} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_91) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_91 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1023} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_92) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_92 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1024} (true);
assume (((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((__var_93) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_93 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1025} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1026} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1027} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1028} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1029} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1030} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1031} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1032} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1033} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1034} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_94) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_94 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1035} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_95) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_95 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1036} (true);
assume (((_totalSupply_ZumToken[this])) >= (0));
assume ((__var_96) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_96 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1037} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1038} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1039} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1040} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1041} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1042} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1043} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((__var_97) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_97 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1044} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((__var_98) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_98 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1045} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((__var_99) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_99 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1046} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1047} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1048} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1049} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((__var_100) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_100 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1050} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((__var_101) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_101 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1051} (true);
assume (((M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((__var_102) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_102 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1052} (true);
assume ((value_s14302) >= (0));
assume ((__var_103) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_103 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1053} (true);
assume ((value_s14302) >= (0));
assume ((__var_104) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_104 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1054} (true);
assume ((value_s14302) >= (0));
assume ((__var_105) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_105 := _decimals_ERC20Detailed[this];
assume (((_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1055} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1056} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1057} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1058} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1059} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1060} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1061} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1062} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1063} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1064} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1065} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1066} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1067} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1068} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1069} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1070} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1071} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1072} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1073} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1074} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1075} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1076} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1077} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1078} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1079} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1080} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1081} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1082} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1083} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1084} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1085} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1086} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1087} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1088} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1089} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1090} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1091} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1092} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1093} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1094} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1095} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1096} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1097} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_106) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_106 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1098} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_107) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_107 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1099} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_108) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_108 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1100} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1101} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1102} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1103} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1104} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1105} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1106} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1107} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1108} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1109} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1110} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1111} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1112} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1113} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1114} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1115} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1116} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1117} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1118} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1119} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1120} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1121} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1122} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1123} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1124} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1125} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1126} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1127} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1128} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1129} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1130} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1131} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1132} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1133} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1134} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1135} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1136} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((__var_109) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_109 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1137} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((__var_110) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_110 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1138} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((__var_111) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_111 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1139} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1140} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1141} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1142} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1143} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1144} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1145} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1146} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1147} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1148} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1149} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1150} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1151} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1152} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1153} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1154} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1155} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1156} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1157} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1158} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1159} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1160} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1161} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1162} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1163} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1164} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1165} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1166} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1167} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1168} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1169} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1170} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1171} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1172} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1173} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1174} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1175} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1176} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1177} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1178} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1179} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1180} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1181} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1182} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1183} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1184} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1185} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1186} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1187} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1188} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1189} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1190} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1191} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1192} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((value_s14302) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1193} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1194} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1195} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1196} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_112) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_112 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1197} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_113) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_113 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1198} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((__var_114) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_114 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1199} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1200} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1201} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1202} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1203} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1204} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1205} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1206} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1207} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1208} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1209} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1210} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1211} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1212} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1213} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1214} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1215} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1216} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1217} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1218} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1219} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1220} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1221} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1222} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1223} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1224} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1225} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1226} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1227} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1228} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1229} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1230} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1231} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1232} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1233} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1234} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1235} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1236} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1237} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1238} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1239} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1240} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1241} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1242} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1243} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][from_s14302])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1244} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1245} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1246} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1247} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1248} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1249} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1250} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1251} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1252} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1253} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1254} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1255} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][to_s14302])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1256} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1257} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1258} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1259} (true);
assume ((value_s14302) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1260} (true);
assume ((value_s14302) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1261} (true);
assume ((value_s14302) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1262} (true);
assume ((value_s14302) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1263} (true);
assume ((value_s14302) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1264} (true);
assume ((value_s14302) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1265} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1266} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1267} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1268} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((__var_115) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_115 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1269} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((__var_116) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_116 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1270} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((__var_117) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_117 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1271} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1272} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1273} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1274} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1275} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1276} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1277} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1278} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1279} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1280} (true);
assume ((__var_118) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_118 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1281} (true);
assume ((__var_119) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_119 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1282} (true);
assume ((__var_120) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_120 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1283} (true);
assume ((__var_121) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_121 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1284} (true);
assume ((__var_122) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_122 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1285} (true);
assume ((__var_123) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_123 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1286} (true);
assume ((__var_124) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_124 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1287} (true);
assume ((__var_125) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_125 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1288} (true);
assume ((__var_126) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_126 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1289} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1290} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1291} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1292} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1293} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1294} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1295} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1296} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1297} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1298} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1299} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1300} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1301} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1302} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1303} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1304} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1305} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1306} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1307} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1308} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1309} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1310} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1311} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1312} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1313} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1314} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1315} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1316} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1317} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1318} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1319} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1320} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1321} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1322} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1323} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1324} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1325} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1326} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1327} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1328} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1329} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1330} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1331} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1332} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1333} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1334} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1335} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1336} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1337} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1338} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1339} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1340} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1341} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1342} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1343} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1344} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1345} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1346} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1347} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1348} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1349} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1350} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1351} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1353} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((value_s14302) <= (M_Ref_int[_balances_ZumToken[this]][from_s14302]));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1354} (true);
assume ((value_s14302) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((value_s14302) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1355} (true);
__var_127 := null;
assume ((to_s14302) != (null));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1356} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][from_s14302]) >= (0));
assume ((value_s14302) >= (0));
call __var_128 := sub_SafeMath(this, this, 0, M_Ref_int[_balances_ZumToken[this]][from_s14302], value_s14302);
M_Ref_int[_balances_ZumToken[this]][from_s14302] := __var_128;
assume ((__var_128) >= (0));
call  {:cexpr "_balances[from]"} boogie_si_record_sol2Bpl_int(M_Ref_int[_balances_ZumToken[this]][from_s14302]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1357} (true);
assume ((tokensToBurn_s14301) >= (0));
assume ((value_s14302) >= (0));
call tokensToBurn_s14301 := cut_ZumToken(this, msgsender_MSG, msgvalue_MSG, value_s14302);
tokensToBurn_s14301 := tokensToBurn_s14301;
call  {:cexpr "tokensToBurn"} boogie_si_record_sol2Bpl_int(tokensToBurn_s14301);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1358} (true);
assume ((tokensToTransfer_s14301) >= (0));
assume ((value_s14302) >= (0));
assume ((tokensToBurn_s14301) >= (0));
call tokensToTransfer_s14301 := sub_SafeMath(this, this, 0, value_s14302, tokensToBurn_s14301);
tokensToTransfer_s14301 := tokensToTransfer_s14301;
call  {:cexpr "tokensToTransfer"} boogie_si_record_sol2Bpl_int(tokensToTransfer_s14301);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1359} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][to_s14302]) >= (0));
assume ((tokensToTransfer_s14301) >= (0));
call __var_129 := add_SafeMath(this, this, 0, M_Ref_int[_balances_ZumToken[this]][to_s14302], tokensToTransfer_s14301);
M_Ref_int[_balances_ZumToken[this]][to_s14302] := __var_129;
assume ((__var_129) >= (0));
call  {:cexpr "_balances[to]"} boogie_si_record_sol2Bpl_int(M_Ref_int[_balances_ZumToken[this]][to_s14302]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1360} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((tokensToBurn_s14301) >= (0));
call __var_130 := sub_SafeMath(this, this, 0, _totalSupply_ZumToken[this], tokensToBurn_s14301);
_totalSupply_ZumToken[this] := __var_130;
assume ((__var_130) >= (0));
call  {:cexpr "_totalSupply"} boogie_si_record_sol2Bpl_int(_totalSupply_ZumToken[this]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1361} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]) >= (0));
assume ((value_s14302) >= (0));
call __var_131 := sub_SafeMath(this, this, 0, M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG], value_s14302);
M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG] := __var_131;
assume ((__var_131) >= (0));
call  {:cexpr "_allowed[from][msg.sender]"} boogie_si_record_sol2Bpl_int(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][from_s14302]][msgsender_MSG]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1362} (true);
assert {:EventEmitted "Transfer_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1363} (true);
assert {:EventEmitted "Transfer_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1364} (true);
__ret_0_ := true;
return;
}

const {:existential true} HoudiniF995_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF996_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF997_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF998_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF999_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1000_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1001_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1002_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1003_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1004_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1005_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1006_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1007_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1008_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1009_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1010_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1011_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1012_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1013_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1014_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1015_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1016_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1017_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1018_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1019_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1020_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1021_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1022_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1023_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1024_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1025_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1026_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1027_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1028_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1029_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1030_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1031_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1032_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1033_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1034_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1035_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1036_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1037_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1038_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1039_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1040_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1041_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1042_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1043_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1044_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1045_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1046_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1047_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1048_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1049_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1050_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1051_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1052_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1053_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1054_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1055_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1056_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1057_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1058_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1059_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1060_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1061_upAllowance_ZumToken: bool;
const {:existential true} HoudiniF1062_upAllowance_ZumToken: bool;
procedure {:public} {:inline 1} upAllowance_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s15455: Ref, addedValue_s15455: int) returns (__ret_0_: bool);
requires HoudiniF995_upAllowance_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF996_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF997_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF998_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF999_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1000_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1001_upAllowance_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1002_upAllowance_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF1003_upAllowance_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1004_upAllowance_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF1005_upAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1006_upAllowance_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1007_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF1008_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1009_upAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1010_upAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1011_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1012_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1013_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF1014_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1015_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1016_upAllowance_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1017_upAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1018_upAllowance_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1019_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1020_upAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1021_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1022_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1023_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1024_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1025_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1026_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1027_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1028_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1029_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1030_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1031_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1032_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1033_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1034_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1035_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1036_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1037_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1038_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1039_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1040_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1041_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1042_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1043_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1044_upAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1045_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1046_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1047_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1048_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1049_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1050_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1051_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1052_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1053_upAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1054_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1055_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1056_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1057_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1058_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1059_upAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1060_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1061_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1062_upAllowance_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation upAllowance_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s15455: Ref, addedValue_s15455: int) returns (__ret_0_: bool)
{
var __var_132: int;
var __var_133: int;
var __var_134: int;
var __var_135: Ref;
var __var_136: Ref;
var __var_137: int;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "spender"} boogie_si_record_sol2Bpl_ref(spender_s15455);
call  {:cexpr "addedValue"} boogie_si_record_sol2Bpl_int(addedValue_s15455);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1367} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1369} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1370} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1371} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1372} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1373} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1374} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1375} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1376} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1377} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1378} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1379} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1380} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1381} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1382} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1383} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1384} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1385} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1386} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1387} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1388} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1389} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1390} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1391} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1392} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1393} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1394} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1395} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1396} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1397} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1398} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1399} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1400} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1401} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1402} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1403} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1404} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1405} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1406} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1407} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1408} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1409} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1410} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1411} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1412} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1415} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_132) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_132 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1416} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_133) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_133 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1417} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_134) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_134 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1418} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1419} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1420} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1421} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1422} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1423} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1424} (true);
__var_135 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1425} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1426} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1427} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1428} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1429} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1430} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1431} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1432} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1433} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1434} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1435} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1436} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1437} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1438} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1439} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1440} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1441} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1442} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1443} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1444} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1445} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1446} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1447} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1448} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1449} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1450} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1451} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1452} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1453} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1454} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1455} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1456} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1457} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1458} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1459} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1460} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1461} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1462} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1463} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1464} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1465} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1466} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1467} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1468} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1469} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1470} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1471} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1472} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1473} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1474} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1475} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1476} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1477} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1478} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1479} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1480} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1481} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1482} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1484} (true);
__var_136 := null;
assume ((spender_s15455) != (null));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1486} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s15455]) >= (0));
assume ((__var_137) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s15455]) >= (0));
assume ((addedValue_s15455) >= (0));
call __var_137 := add_SafeMath(this, this, 0, M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s15455], addedValue_s15455);
assume (((__var_137)) >= (0));
M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s15455] := (__var_137);
call  {:cexpr "_allowed[msg.sender][spender]"} boogie_si_record_sol2Bpl_int(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s15455]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1487} (true);
assert {:EventEmitted "Approval_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1488} (true);
__ret_0_ := true;
return;
}

const {:existential true} HoudiniF1063_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1064_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1065_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1066_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1067_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1068_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1069_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1070_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1071_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1072_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1073_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1074_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1075_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1076_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1077_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1078_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1079_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1080_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1081_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1082_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1083_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1084_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1085_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1086_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1087_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1088_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1089_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1090_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1091_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1092_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1093_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1094_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1095_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1096_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1097_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1098_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1099_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1100_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1101_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1102_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1103_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1104_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1105_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1106_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1107_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1108_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1109_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1110_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1111_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1112_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1113_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1114_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1115_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1116_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1117_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1118_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1119_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1120_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1121_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1122_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1123_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1124_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1125_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1126_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1127_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1128_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1129_downAllowance_ZumToken: bool;
const {:existential true} HoudiniF1130_downAllowance_ZumToken: bool;
procedure {:public} {:inline 1} downAllowance_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s16608: Ref, subtractedValue_s16608: int) returns (__ret_0_: bool);
requires HoudiniF1063_downAllowance_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF1064_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF1065_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1066_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1067_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1068_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1069_downAllowance_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1070_downAllowance_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF1071_downAllowance_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1072_downAllowance_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF1073_downAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1074_downAllowance_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1075_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF1076_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1077_downAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1078_downAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1079_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1080_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1081_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF1082_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1083_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1084_downAllowance_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1085_downAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1086_downAllowance_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1087_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1088_downAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1089_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1090_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1091_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1092_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1093_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1094_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1095_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1096_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1097_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1098_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1099_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1100_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1101_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1102_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1103_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1104_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1105_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1106_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1107_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1108_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1109_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1110_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1111_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1112_downAllowance_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1113_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1114_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1115_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1116_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1117_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1118_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1119_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1120_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1121_downAllowance_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1122_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1123_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1124_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1125_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1126_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1127_downAllowance_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1128_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1129_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1130_downAllowance_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation downAllowance_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, spender_s16608: Ref, subtractedValue_s16608: int) returns (__ret_0_: bool)
{
var __var_138: int;
var __var_139: int;
var __var_140: int;
var __var_141: Ref;
var __var_142: Ref;
var __var_143: int;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "spender"} boogie_si_record_sol2Bpl_ref(spender_s16608);
call  {:cexpr "subtractedValue"} boogie_si_record_sol2Bpl_int(subtractedValue_s16608);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1491} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1493} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1494} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1495} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1496} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1497} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1498} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1499} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1500} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1501} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1502} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1503} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1504} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1505} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1506} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1507} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1508} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1509} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1510} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1511} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1512} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1513} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1514} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1515} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1516} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1517} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1518} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1519} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1520} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1521} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1522} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1523} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1524} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1525} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1526} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1527} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1528} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1529} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1530} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1531} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1532} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1533} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1534} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1535} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1536} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1539} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_138) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_138 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1540} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_139) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_139 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1541} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_140) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_140 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1542} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1543} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1544} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1545} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1546} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1547} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1548} (true);
__var_141 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1549} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1550} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1551} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1552} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1553} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1554} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1555} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1556} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1557} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1558} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1559} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1560} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1561} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1562} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1563} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1564} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1565} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1566} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1567} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1568} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1569} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1570} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1571} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1572} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1573} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1574} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1575} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1576} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1577} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1578} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1579} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1580} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1581} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1582} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1583} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1584} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1585} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1586} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1587} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1588} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1589} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1590} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1591} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1592} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1593} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1594} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1595} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1596} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1597} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1598} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1599} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1600} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1601} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1602} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1603} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1604} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1605} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1606} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1608} (true);
__var_142 := null;
assume ((spender_s16608) != (null));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1609} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s16608]) >= (0));
assume ((__var_143) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s16608]) >= (0));
assume ((subtractedValue_s16608) >= (0));
call __var_143 := sub_SafeMath(this, this, 0, M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s16608], subtractedValue_s16608);
assume (((__var_143)) >= (0));
M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s16608] := (__var_143);
call  {:cexpr "_allowed[msg.sender][spender]"} boogie_si_record_sol2Bpl_int(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][msgsender_MSG]][spender_s16608]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1610} (true);
assert {:EventEmitted "Approval_ZumToken"} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1611} (true);
__ret_0_ := true;
return;
}

procedure {:inline 1} _issue_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, account_s16641: Ref, amount_s16641: int);
implementation _issue_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, account_s16641: Ref, amount_s16641: int)
{
var __var_144: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "account"} boogie_si_record_sol2Bpl_ref(account_s16641);
call  {:cexpr "amount"} boogie_si_record_sol2Bpl_int(amount_s16641);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1614} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1615} (true);
assume ((amount_s16641) >= (0));
assume ((amount_s16641) != (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1616} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][account_s16641]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][account_s16641]) >= (0));
assume ((amount_s16641) >= (0));
call __var_144 := add_SafeMath(this, this, 0, M_Ref_int[_balances_ZumToken[this]][account_s16641], amount_s16641);
M_Ref_int[_balances_ZumToken[this]][account_s16641] := __var_144;
assume ((__var_144) >= (0));
call  {:cexpr "_balances[account]"} boogie_si_record_sol2Bpl_int(M_Ref_int[_balances_ZumToken[this]][account_s16641]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1617} (true);
assert {:EventEmitted "Transfer_ZumToken"} (true);
}

const {:existential true} HoudiniF1131_destroy_ZumToken: bool;
const {:existential true} HoudiniF1132_destroy_ZumToken: bool;
const {:existential true} HoudiniF1133_destroy_ZumToken: bool;
const {:existential true} HoudiniF1134_destroy_ZumToken: bool;
const {:existential true} HoudiniF1135_destroy_ZumToken: bool;
const {:existential true} HoudiniF1136_destroy_ZumToken: bool;
const {:existential true} HoudiniF1137_destroy_ZumToken: bool;
const {:existential true} HoudiniF1138_destroy_ZumToken: bool;
const {:existential true} HoudiniF1139_destroy_ZumToken: bool;
const {:existential true} HoudiniF1140_destroy_ZumToken: bool;
const {:existential true} HoudiniF1141_destroy_ZumToken: bool;
const {:existential true} HoudiniF1142_destroy_ZumToken: bool;
const {:existential true} HoudiniF1143_destroy_ZumToken: bool;
const {:existential true} HoudiniF1144_destroy_ZumToken: bool;
const {:existential true} HoudiniF1145_destroy_ZumToken: bool;
const {:existential true} HoudiniF1146_destroy_ZumToken: bool;
const {:existential true} HoudiniF1147_destroy_ZumToken: bool;
const {:existential true} HoudiniF1148_destroy_ZumToken: bool;
const {:existential true} HoudiniF1149_destroy_ZumToken: bool;
const {:existential true} HoudiniF1150_destroy_ZumToken: bool;
const {:existential true} HoudiniF1151_destroy_ZumToken: bool;
const {:existential true} HoudiniF1152_destroy_ZumToken: bool;
const {:existential true} HoudiniF1153_destroy_ZumToken: bool;
const {:existential true} HoudiniF1154_destroy_ZumToken: bool;
const {:existential true} HoudiniF1155_destroy_ZumToken: bool;
const {:existential true} HoudiniF1156_destroy_ZumToken: bool;
const {:existential true} HoudiniF1157_destroy_ZumToken: bool;
const {:existential true} HoudiniF1158_destroy_ZumToken: bool;
const {:existential true} HoudiniF1159_destroy_ZumToken: bool;
const {:existential true} HoudiniF1160_destroy_ZumToken: bool;
const {:existential true} HoudiniF1161_destroy_ZumToken: bool;
const {:existential true} HoudiniF1162_destroy_ZumToken: bool;
const {:existential true} HoudiniF1163_destroy_ZumToken: bool;
const {:existential true} HoudiniF1164_destroy_ZumToken: bool;
const {:existential true} HoudiniF1165_destroy_ZumToken: bool;
const {:existential true} HoudiniF1166_destroy_ZumToken: bool;
const {:existential true} HoudiniF1167_destroy_ZumToken: bool;
const {:existential true} HoudiniF1168_destroy_ZumToken: bool;
const {:existential true} HoudiniF1169_destroy_ZumToken: bool;
const {:existential true} HoudiniF1170_destroy_ZumToken: bool;
const {:existential true} HoudiniF1171_destroy_ZumToken: bool;
const {:existential true} HoudiniF1172_destroy_ZumToken: bool;
const {:existential true} HoudiniF1173_destroy_ZumToken: bool;
const {:existential true} HoudiniF1174_destroy_ZumToken: bool;
const {:existential true} HoudiniF1175_destroy_ZumToken: bool;
const {:existential true} HoudiniF1176_destroy_ZumToken: bool;
const {:existential true} HoudiniF1177_destroy_ZumToken: bool;
const {:existential true} HoudiniF1178_destroy_ZumToken: bool;
const {:existential true} HoudiniF1179_destroy_ZumToken: bool;
const {:existential true} HoudiniF1180_destroy_ZumToken: bool;
const {:existential true} HoudiniF1181_destroy_ZumToken: bool;
const {:existential true} HoudiniF1182_destroy_ZumToken: bool;
const {:existential true} HoudiniF1183_destroy_ZumToken: bool;
const {:existential true} HoudiniF1184_destroy_ZumToken: bool;
const {:existential true} HoudiniF1185_destroy_ZumToken: bool;
const {:existential true} HoudiniF1186_destroy_ZumToken: bool;
const {:existential true} HoudiniF1187_destroy_ZumToken: bool;
const {:existential true} HoudiniF1188_destroy_ZumToken: bool;
const {:existential true} HoudiniF1189_destroy_ZumToken: bool;
const {:existential true} HoudiniF1190_destroy_ZumToken: bool;
const {:existential true} HoudiniF1191_destroy_ZumToken: bool;
const {:existential true} HoudiniF1192_destroy_ZumToken: bool;
const {:existential true} HoudiniF1193_destroy_ZumToken: bool;
const {:existential true} HoudiniF1194_destroy_ZumToken: bool;
const {:existential true} HoudiniF1195_destroy_ZumToken: bool;
const {:existential true} HoudiniF1196_destroy_ZumToken: bool;
const {:existential true} HoudiniF1197_destroy_ZumToken: bool;
const {:existential true} HoudiniF1198_destroy_ZumToken: bool;
procedure {:public} {:inline 1} destroy_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, amount_s17756: int);
requires HoudiniF1131_destroy_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF1132_destroy_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF1133_destroy_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1134_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1135_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1136_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1137_destroy_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1138_destroy_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF1139_destroy_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1140_destroy_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF1141_destroy_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1142_destroy_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1143_destroy_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF1144_destroy_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1145_destroy_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1146_destroy_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1147_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1148_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1149_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF1150_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1151_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1152_destroy_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1153_destroy_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1154_destroy_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1155_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1156_destroy_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1157_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1158_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1159_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1160_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1161_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1162_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1163_destroy_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1164_destroy_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1165_destroy_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1166_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1167_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1168_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1169_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1170_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1171_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1172_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1173_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1174_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1175_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1176_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1177_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1178_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1179_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1180_destroy_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1181_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1182_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1183_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1184_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1185_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1186_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1187_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1188_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1189_destroy_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1190_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1191_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1192_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1193_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1194_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1195_destroy_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1196_destroy_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1197_destroy_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1198_destroy_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation destroy_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, amount_s17756: int)
{
var __var_145: int;
var __var_146: int;
var __var_147: int;
var __var_148: Ref;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "amount"} boogie_si_record_sol2Bpl_int(amount_s17756);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1620} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1622} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1623} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1624} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1625} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1626} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1627} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1628} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1629} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1630} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1631} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1632} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1633} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1634} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1635} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1636} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1637} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1638} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1639} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1640} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1641} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1642} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1643} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1644} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1645} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1646} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1647} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1648} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1649} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1650} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1651} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1652} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1653} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1654} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1655} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1656} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1657} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1658} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1659} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1660} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1661} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1662} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1663} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1664} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1665} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1668} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_145) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_145 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1669} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_146) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_146 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1670} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_147) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_147 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1671} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1672} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1673} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1674} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1675} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1676} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1677} (true);
__var_148 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1678} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1679} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1680} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1681} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1682} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1683} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1684} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1685} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1686} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1687} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1688} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1689} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1690} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1691} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1692} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1693} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1694} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1695} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1696} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1697} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1698} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1699} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1700} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1701} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1702} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1703} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1704} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1705} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1706} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1707} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1708} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1709} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1710} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1711} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1712} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1713} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1714} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1715} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1716} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1717} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1718} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1719} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1720} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1721} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1722} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1723} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1724} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1725} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1726} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1727} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1728} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1729} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1730} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1731} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1732} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1733} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1734} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1735} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1737} (true);
assume ((amount_s17756) >= (0));
call _destroy_ZumToken(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, amount_s17756);
}

procedure {:inline 1} _destroy_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, account_s17804: Ref, amount_s17804: int);
implementation _destroy_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, account_s17804: Ref, amount_s17804: int)
{
var __var_149: int;
var __var_150: int;
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "account"} boogie_si_record_sol2Bpl_ref(account_s17804);
call  {:cexpr "amount"} boogie_si_record_sol2Bpl_int(amount_s17804);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1740} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1741} (true);
assume ((amount_s17804) >= (0));
assume ((amount_s17804) != (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1742} (true);
assume ((amount_s17804) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][account_s17804]) >= (0));
assume ((amount_s17804) <= (M_Ref_int[_balances_ZumToken[this]][account_s17804]));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1743} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((amount_s17804) >= (0));
call __var_149 := sub_SafeMath(this, this, 0, _totalSupply_ZumToken[this], amount_s17804);
_totalSupply_ZumToken[this] := __var_149;
assume ((__var_149) >= (0));
call  {:cexpr "_totalSupply"} boogie_si_record_sol2Bpl_int(_totalSupply_ZumToken[this]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1744} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][account_s17804]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][account_s17804]) >= (0));
assume ((amount_s17804) >= (0));
call __var_150 := sub_SafeMath(this, this, 0, M_Ref_int[_balances_ZumToken[this]][account_s17804], amount_s17804);
M_Ref_int[_balances_ZumToken[this]][account_s17804] := __var_150;
assume ((__var_150) >= (0));
call  {:cexpr "_balances[account]"} boogie_si_record_sol2Bpl_int(M_Ref_int[_balances_ZumToken[this]][account_s17804]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1745} (true);
assert {:EventEmitted "Transfer_ZumToken"} (true);
}

const {:existential true} HoudiniF1199_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1200_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1201_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1202_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1203_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1204_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1205_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1206_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1207_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1208_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1209_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1210_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1211_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1212_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1213_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1214_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1215_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1216_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1217_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1218_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1219_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1220_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1221_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1222_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1223_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1224_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1225_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1226_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1227_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1228_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1229_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1230_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1231_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1232_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1233_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1234_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1235_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1236_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1237_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1238_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1239_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1240_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1241_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1242_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1243_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1244_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1245_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1246_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1247_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1248_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1249_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1250_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1251_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1252_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1253_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1254_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1255_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1256_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1257_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1258_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1259_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1260_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1261_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1262_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1263_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1264_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1265_destroyFrom_ZumToken: bool;
const {:existential true} HoudiniF1266_destroyFrom_ZumToken: bool;
procedure {:public} {:inline 1} destroyFrom_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, account_s18948: Ref, amount_s18948: int);
requires HoudiniF1199_destroyFrom_ZumToken ==> ((msgsender_MSG) != (null));
requires HoudiniF1200_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
requires HoudiniF1201_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1202_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1203_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) >= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1204_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(_decimals_ERC20Detailed[this])));
ensures HoudiniF1205_destroyFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1206_destroyFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) == (basePercent_ZumToken[this]));
ensures HoudiniF1207_destroyFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1208_destroyFrom_ZumToken ==> ((old(basePercent_ZumToken[this])) <= (basePercent_ZumToken[this]));
ensures HoudiniF1209_destroyFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) <= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1210_destroyFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1211_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) > (0));
ensures HoudiniF1212_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) == (100));
ensures HoudiniF1213_destroyFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) == (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1214_destroyFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) >= (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1215_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1216_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1217_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])));
ensures HoudiniF1218_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1219_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1220_destroyFrom_ZumToken ==> ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) != (M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]));
ensures HoudiniF1221_destroyFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) != (old(_totalSupply_ZumToken[this])));
ensures HoudiniF1222_destroyFrom_ZumToken ==> ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) != (_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])));
ensures HoudiniF1223_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1224_destroyFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1225_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1226_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1227_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1228_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1229_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1230_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1231_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1232_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1233_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1234_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1235_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1236_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1237_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1238_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1239_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1240_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1241_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1242_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1243_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1244_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1245_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
ensures HoudiniF1246_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) > (0));
ensures HoudiniF1247_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) == (8));
ensures HoudiniF1248_destroyFrom_ZumToken ==> ((_totalSupply_ZumToken[this]) > (0));
ensures HoudiniF1249_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
ensures HoudiniF1250_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
ensures HoudiniF1251_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
ensures HoudiniF1252_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
ensures HoudiniF1253_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
ensures HoudiniF1254_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
ensures HoudiniF1255_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
ensures HoudiniF1256_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
ensures HoudiniF1257_destroyFrom_ZumToken ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1258_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
ensures HoudiniF1259_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
ensures HoudiniF1260_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
ensures HoudiniF1261_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1262_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1263_destroyFrom_ZumToken ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
ensures HoudiniF1264_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
ensures HoudiniF1265_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
ensures HoudiniF1266_destroyFrom_ZumToken ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
implementation destroyFrom_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int, account_s18948: Ref, amount_s18948: int)
{
var __var_151: int;
var __var_152: int;
var __var_153: int;
var __var_154: Ref;
var __var_155: int;
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
assume ((_decimals_ERC20Detailed[this]) > (0));
assume ((_decimals_ERC20Detailed[this]) == (8));
assume ((_totalSupply_ZumToken[this]) > (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
assume ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
assume ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
call  {:cexpr "_verisolFirstArg"} boogie_si_record_sol2Bpl_bool(false);
call  {:cexpr "this"} boogie_si_record_sol2Bpl_ref(this);
call  {:cexpr "msg.sender"} boogie_si_record_sol2Bpl_ref(msgsender_MSG);
call  {:cexpr "msg.value"} boogie_si_record_sol2Bpl_int(msgvalue_MSG);
call  {:cexpr "account"} boogie_si_record_sol2Bpl_ref(account_s18948);
call  {:cexpr "amount"} boogie_si_record_sol2Bpl_int(amount_s18948);
call  {:cexpr "_verisolLastArg"} boogie_si_record_sol2Bpl_bool(true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1748} (true);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1750} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1751} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1752} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1753} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1754} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1755} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1756} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1757} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1758} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1759} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1760} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1761} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1762} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1763} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1764} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1765} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1766} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1767} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1768} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1769} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1770} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1771} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1772} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1773} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1774} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1775} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1776} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1777} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1778} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1779} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1780} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1781} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1782} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1783} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1784} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1785} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1786} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1787} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1788} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1789} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1790} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1791} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1792} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1793} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1796} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_151) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_151 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1797} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_152) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_152 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1798} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((__var_153) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
__var_153 := _decimals_ERC20Detailed[this];
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((old(_decimals_ERC20Detailed[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1799} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1800} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1801} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1802} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((old(basePercent_ZumToken[this])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1803} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1804} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1805} (true);
__var_154 := null;
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1806} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1807} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1808} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1809} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1810} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1811} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1812} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1813} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1814} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1815} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1816} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1817} (true);
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assume ((old(M_Ref_int[_balances_ZumToken[this]][msgsender_MSG])) >= (0));
assume ((M_Ref_int[_balances_ZumToken[this]][msgsender_MSG]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1818} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assume ((old(_totalSupply_ZumToken[this])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1819} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((old(_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]]))) >= (0));
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1820} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1821} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1822} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1823} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1824} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1825} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1826} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1827} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1828} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1829} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1830} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1831} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1832} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1833} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1834} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1835} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1836} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1837} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1838} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1839} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1840} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1841} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1842} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1843} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1844} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1845} (true);
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1846} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1847} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1848} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_decimals_ERC20Detailed[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1849} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1850} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1851} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1852} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1853} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1854} (true);
assume ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1855} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1856} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1857} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((basePercent_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1858} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1859} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1860} (true);
assume ((_decimals_ERC20Detailed[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1861} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1862} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1863} (true);
assume ((basePercent_ZumToken[this]) >= (0));
assume ((_totalSupply_ZumToken[this]) >= (0));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1865} (true);
assume ((amount_s18948) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG]) >= (0));
assume ((amount_s18948) <= (M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG]));
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1866} (true);
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG]) >= (0));
assume ((M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG]) >= (0));
assume ((amount_s18948) >= (0));
call __var_155 := sub_SafeMath(this, this, 0, M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG], amount_s18948);
M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG] := __var_155;
assume ((__var_155) >= (0));
call  {:cexpr "_allowed[account][msg.sender]"} boogie_si_record_sol2Bpl_int(M_Ref_int[M_Ref_Ref[_allowed_ZumToken[this]][account_s18948]][msgsender_MSG]);
assert {:first} {:sourceFile "/home/liuye/Projects/verisol-houdini/verisol_test/0xe0b9bcd54bf8a730ea5d3f1ffce0885e911a502c.etherscan.io-ZumToken.verisol.sol"} {:sourceLine 1867} (true);
assume ((amount_s18948) >= (0));
call _destroy_ZumToken(this, msgsender_MSG, msgvalue_MSG, account_s18948, amount_s18948);
}

procedure {:inline 1} contractInvariant_ZumToken(this: Ref, msgsender_MSG: Ref, msgvalue_MSG: int);
procedure {:inline 1} FallbackDispatch(from: Ref, to: Ref, amount: int);
implementation FallbackDispatch(from: Ref, to: Ref, amount: int)
{
if ((DType[to]) == (ZumToken)) {
assume ((amount) == (0));
} else if ((DType[to]) == (ERC20Detailed)) {
assume ((amount) == (0));
} else if ((DType[to]) == (IERC20)) {
assume ((amount) == (0));
} else {
call Fallback_UnknownType(from, to, amount);
}
}

procedure {:inline 1} Fallback_UnknownType(from: Ref, to: Ref, amount: int);
implementation Fallback_UnknownType(from: Ref, to: Ref, amount: int)
{
// ---- Logic for payable function START 
assume ((Balance[from]) >= (amount));
Balance[from] := (Balance[from]) - (amount);
Balance[to] := (Balance[to]) + (amount);
// ---- Logic for payable function END 
}

procedure {:inline 1} send(from: Ref, to: Ref, amount: int) returns (success: bool);
implementation send(from: Ref, to: Ref, amount: int) returns (success: bool)
{
if ((Balance[from]) >= (amount)) {
call FallbackDispatch(from, to, amount);
success := true;
} else {
success := false;
}
}

procedure BoogieEntry_IERC20();
implementation BoogieEntry_IERC20()
{
var this: Ref;
var msgsender_MSG: Ref;
var msgvalue_MSG: int;
var choice: int;
var tmpNow: int;
assume ((now) >= (0));
assume ((((DType[this]) == (IERC20)) || ((DType[this]) == (ERC20Detailed))) || ((DType[this]) == (ZumToken)));
call IERC20_IERC20(this, msgsender_MSG, msgvalue_MSG);
while (true)
{
havoc msgsender_MSG;
havoc msgvalue_MSG;
havoc choice;
havoc tmpNow;
tmpNow := now;
havoc now;
assume ((now) > (tmpNow));
assume ((msgsender_MSG) != (null));
assume ((DType[msgsender_MSG]) != (IERC20));
assume ((DType[msgsender_MSG]) != (SafeMath));
assume ((DType[msgsender_MSG]) != (ERC20Detailed));
assume ((DType[msgsender_MSG]) != (ZumToken));
assume ((DType[msgsender_MSG]) != (VeriSol));
Alloc[msgsender_MSG] := true;
}
}

procedure BoogieEntry_SafeMath();
implementation BoogieEntry_SafeMath()
{
var this: Ref;
var msgsender_MSG: Ref;
var msgvalue_MSG: int;
var choice: int;
var tmpNow: int;
assume ((now) >= (0));
assume ((DType[this]) == (SafeMath));
call SafeMath_SafeMath(this, msgsender_MSG, msgvalue_MSG);
while (true)
{
havoc msgsender_MSG;
havoc msgvalue_MSG;
havoc choice;
havoc tmpNow;
tmpNow := now;
havoc now;
assume ((now) > (tmpNow));
assume ((msgsender_MSG) != (null));
assume ((DType[msgsender_MSG]) != (IERC20));
assume ((DType[msgsender_MSG]) != (SafeMath));
assume ((DType[msgsender_MSG]) != (ERC20Detailed));
assume ((DType[msgsender_MSG]) != (ZumToken));
assume ((DType[msgsender_MSG]) != (VeriSol));
Alloc[msgsender_MSG] := true;
}
}

const {:existential true} HoudiniB1_ERC20Detailed: bool;
const {:existential true} HoudiniB2_ERC20Detailed: bool;
const {:existential true} HoudiniB3_ERC20Detailed: bool;
const {:existential true} HoudiniB4_ERC20Detailed: bool;
procedure BoogieEntry_ERC20Detailed();
implementation BoogieEntry_ERC20Detailed()
{
var this: Ref;
var msgsender_MSG: Ref;
var msgvalue_MSG: int;
var choice: int;
var __ret_0_totalSupply: int;
var who_s30: Ref;
var __ret_0_balanceOf: int;
var owner_s39: Ref;
var spender_s39: Ref;
var __ret_0_allowance: int;
var to_s48: Ref;
var value_s48: int;
var __ret_0_transfer: bool;
var spender_s57: Ref;
var value_s57: int;
var __ret_0_approve: bool;
var from_s68: Ref;
var to_s68: Ref;
var value_s68: int;
var __ret_0_transferFrom: bool;
var name_s230: int;
var symbol_s230: int;
var decimals_s230: int;
var __ret_0_name: int;
var __ret_0_symbol: int;
var __ret_0_decimals: int;
var tmpNow: int;
assume ((now) >= (0));
assume (((DType[this]) == (ERC20Detailed)) || ((DType[this]) == (ZumToken)));
call ERC20Detailed_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG, name_s230, symbol_s230, decimals_s230);
while (true)
  invariant (HoudiniB1_ERC20Detailed) ==> ((_name_ERC20Detailed[this]) == (0));
  invariant (HoudiniB2_ERC20Detailed) ==> ((_name_ERC20Detailed[this]) != (0));
  invariant (HoudiniB3_ERC20Detailed) ==> ((_symbol_ERC20Detailed[this]) == (0));
  invariant (HoudiniB4_ERC20Detailed) ==> ((_symbol_ERC20Detailed[this]) != (0));
{
havoc msgsender_MSG;
havoc msgvalue_MSG;
havoc choice;
havoc __ret_0_totalSupply;
havoc who_s30;
havoc __ret_0_balanceOf;
havoc owner_s39;
havoc spender_s39;
havoc __ret_0_allowance;
havoc to_s48;
havoc value_s48;
havoc __ret_0_transfer;
havoc spender_s57;
havoc value_s57;
havoc __ret_0_approve;
havoc from_s68;
havoc to_s68;
havoc value_s68;
havoc __ret_0_transferFrom;
havoc name_s230;
havoc symbol_s230;
havoc decimals_s230;
havoc __ret_0_name;
havoc __ret_0_symbol;
havoc __ret_0_decimals;
havoc tmpNow;
tmpNow := now;
havoc now;
assume ((now) > (tmpNow));
assume ((msgsender_MSG) != (null));
assume ((DType[msgsender_MSG]) != (IERC20));
assume ((DType[msgsender_MSG]) != (SafeMath));
assume ((DType[msgsender_MSG]) != (ERC20Detailed));
assume ((DType[msgsender_MSG]) != (ZumToken));
assume ((DType[msgsender_MSG]) != (VeriSol));
Alloc[msgsender_MSG] := true;
if ((choice) == (9)) {
call __ret_0_totalSupply := totalSupply_IERC20(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (8)) {
call __ret_0_balanceOf := balanceOf_IERC20(this, msgsender_MSG, msgvalue_MSG, who_s30);
} else if ((choice) == (7)) {
call __ret_0_allowance := allowance_IERC20(this, msgsender_MSG, msgvalue_MSG, owner_s39, spender_s39);
} else if ((choice) == (6)) {
call __ret_0_transfer := transfer_IERC20(this, msgsender_MSG, msgvalue_MSG, to_s48, value_s48);
} else if ((choice) == (5)) {
call __ret_0_approve := approve_IERC20(this, msgsender_MSG, msgvalue_MSG, spender_s57, value_s57);
} else if ((choice) == (4)) {
call __ret_0_transferFrom := transferFrom_IERC20(this, msgsender_MSG, msgvalue_MSG, from_s68, to_s68, value_s68);
} else if ((choice) == (3)) {
call __ret_0_name := name_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (2)) {
call __ret_0_symbol := symbol_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (1)) {
call __ret_0_decimals := decimals_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG);
}
}
}

const {:existential true} HoudiniB1_ZumToken: bool;
const {:existential true} HoudiniB2_ZumToken: bool;
const {:existential true} HoudiniB3_ZumToken: bool;
const {:existential true} HoudiniB4_ZumToken: bool;
const {:existential true} HoudiniB5_ZumToken: bool;
const {:existential true} HoudiniB6_ZumToken: bool;
const {:existential true} HoudiniB7_ZumToken: bool;
const {:existential true} HoudiniB8_ZumToken: bool;
const {:existential true} HoudiniB9_ZumToken: bool;
const {:existential true} HoudiniB10_ZumToken: bool;
const {:existential true} HoudiniB11_ZumToken: bool;
const {:existential true} HoudiniB12_ZumToken: bool;
const {:existential true} HoudiniC13_ZumToken: bool;
const {:existential true} HoudiniC14_ZumToken: bool;
const {:existential true} HoudiniC15_ZumToken: bool;
const {:existential true} HoudiniC16_ZumToken: bool;
const {:existential true} HoudiniC17_ZumToken: bool;
const {:existential true} HoudiniC18_ZumToken: bool;
const {:existential true} HoudiniC19_ZumToken: bool;
const {:existential true} HoudiniC20_ZumToken: bool;
const {:existential true} HoudiniC21_ZumToken: bool;
const {:existential true} HoudiniC22_ZumToken: bool;
const {:existential true} HoudiniC23_ZumToken: bool;
const {:existential true} HoudiniC24_ZumToken: bool;
const {:existential true} HoudiniC25_ZumToken: bool;
const {:existential true} HoudiniC26_ZumToken: bool;
const {:existential true} HoudiniC27_ZumToken: bool;
const {:existential true} HoudiniC28_ZumToken: bool;
const {:existential true} HoudiniC29_ZumToken: bool;
const {:existential true} HoudiniC30_ZumToken: bool;
const {:existential true} HoudiniC31_ZumToken: bool;
const {:existential true} HoudiniC32_ZumToken: bool;
const {:existential true} HoudiniC33_ZumToken: bool;
const {:existential true} HoudiniC34_ZumToken: bool;
const {:existential true} HoudiniC35_ZumToken: bool;
const {:existential true} HoudiniC36_ZumToken: bool;
procedure BoogieEntry_ZumToken();
implementation BoogieEntry_ZumToken()
{
var this: Ref;
var msgsender_MSG: Ref;
var msgvalue_MSG: int;
var choice: int;
var __ret_0_totalSupply: int;
var owner_s938: Ref;
var __ret_0_balanceOf: int;
var owner_s954: Ref;
var spender_s954: Ref;
var __ret_0_allowance: int;
var to_s4483: Ref;
var value_s4483: int;
var __ret_0_transfer: bool;
var spender_s8727: Ref;
var value_s8727: int;
var __ret_0_approve: bool;
var from_s14302: Ref;
var to_s14302: Ref;
var value_s14302: int;
var __ret_0_transferFrom: bool;
var name_s230: int;
var symbol_s230: int;
var decimals_s230: int;
var __ret_0_name: int;
var __ret_0_symbol: int;
var __ret_0_decimals: int;
var value_s981: int;
var __ret_0_cut: int;
var receivers_s5618: Ref;
var amounts_s5618: Ref;
var spender_s15455: Ref;
var addedValue_s15455: int;
var __ret_0_upAllowance: bool;
var spender_s16608: Ref;
var subtractedValue_s16608: int;
var __ret_0_downAllowance: bool;
var amount_s17756: int;
var account_s18948: Ref;
var amount_s18948: int;
var tmpNow: int;
assume ((now) >= (0));
assume ((DType[this]) == (ZumToken));
call ZumToken_ZumToken(this, msgsender_MSG, msgvalue_MSG);
while (true)
  invariant (HoudiniB1_ZumToken) ==> ((tokenName_ZumToken[this]) == (0));
  invariant (HoudiniB2_ZumToken) ==> ((tokenName_ZumToken[this]) != (0));
  invariant (HoudiniB3_ZumToken) ==> ((tokenSymbol_ZumToken[this]) == (0));
  invariant (HoudiniB4_ZumToken) ==> ((tokenSymbol_ZumToken[this]) != (0));
  invariant (HoudiniB5_ZumToken) ==> ((_totalSupply_ZumToken[this]) == (0));
  invariant (HoudiniB6_ZumToken) ==> ((_totalSupply_ZumToken[this]) != (0));
  invariant (HoudiniB7_ZumToken) ==> ((_totalSupply_ZumToken[this]) >= (0));
  invariant (HoudiniB8_ZumToken) ==> ((_totalSupply_ZumToken[this]) <= (0));
  invariant (HoudiniB9_ZumToken) ==> ((basePercent_ZumToken[this]) == (0));
  invariant (HoudiniB10_ZumToken) ==> ((basePercent_ZumToken[this]) != (0));
  invariant (HoudiniB11_ZumToken) ==> ((basePercent_ZumToken[this]) >= (0));
  invariant (HoudiniB12_ZumToken) ==> ((basePercent_ZumToken[this]) <= (0));
  invariant (HoudiniC13_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (0));
  invariant (HoudiniC14_ZumToken) ==> ((_decimals_ERC20Detailed[this]) > (0));
  invariant (HoudiniC15_ZumToken) ==> ((_decimals_ERC20Detailed[this]) == (8));
  invariant (HoudiniC16_ZumToken) ==> ((basePercent_ZumToken[this]) > (0));
  invariant (HoudiniC17_ZumToken) ==> ((basePercent_ZumToken[this]) == (100));
  invariant (HoudiniC18_ZumToken) ==> ((_totalSupply_ZumToken[this]) > (0));
  invariant (HoudiniC19_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_decimals_ERC20Detailed[this]));
  invariant (HoudiniC20_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (_decimals_ERC20Detailed[this]));
  invariant (HoudiniC21_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (_decimals_ERC20Detailed[this]));
  invariant (HoudiniC22_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (basePercent_ZumToken[this]));
  invariant (HoudiniC23_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) > (basePercent_ZumToken[this]));
  invariant (HoudiniC24_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) != (basePercent_ZumToken[this]));
  invariant (HoudiniC25_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) == (_totalSupply_ZumToken[this]));
  invariant (HoudiniC26_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) >= (_totalSupply_ZumToken[this]));
  invariant (HoudiniC27_ZumToken) ==> ((_SumMapping_VeriSol(M_Ref_int[_balances_ZumToken[this]])) <= (_totalSupply_ZumToken[this]));
  invariant (HoudiniC28_ZumToken) ==> ((_decimals_ERC20Detailed[this]) <= (basePercent_ZumToken[this]));
  invariant (HoudiniC29_ZumToken) ==> ((_decimals_ERC20Detailed[this]) < (basePercent_ZumToken[this]));
  invariant (HoudiniC30_ZumToken) ==> ((_decimals_ERC20Detailed[this]) != (basePercent_ZumToken[this]));
  invariant (HoudiniC31_ZumToken) ==> ((_decimals_ERC20Detailed[this]) <= (_totalSupply_ZumToken[this]));
  invariant (HoudiniC32_ZumToken) ==> ((_decimals_ERC20Detailed[this]) < (_totalSupply_ZumToken[this]));
  invariant (HoudiniC33_ZumToken) ==> ((_decimals_ERC20Detailed[this]) != (_totalSupply_ZumToken[this]));
  invariant (HoudiniC34_ZumToken) ==> ((basePercent_ZumToken[this]) <= (_totalSupply_ZumToken[this]));
  invariant (HoudiniC35_ZumToken) ==> ((basePercent_ZumToken[this]) < (_totalSupply_ZumToken[this]));
  invariant (HoudiniC36_ZumToken) ==> ((basePercent_ZumToken[this]) != (_totalSupply_ZumToken[this]));
{
havoc msgsender_MSG;
havoc msgvalue_MSG;
havoc choice;
havoc __ret_0_totalSupply;
havoc owner_s938;
havoc __ret_0_balanceOf;
havoc owner_s954;
havoc spender_s954;
havoc __ret_0_allowance;
havoc to_s4483;
havoc value_s4483;
havoc __ret_0_transfer;
havoc spender_s8727;
havoc value_s8727;
havoc __ret_0_approve;
havoc from_s14302;
havoc to_s14302;
havoc value_s14302;
havoc __ret_0_transferFrom;
havoc name_s230;
havoc symbol_s230;
havoc decimals_s230;
havoc __ret_0_name;
havoc __ret_0_symbol;
havoc __ret_0_decimals;
havoc value_s981;
havoc __ret_0_cut;
havoc receivers_s5618;
havoc amounts_s5618;
havoc spender_s15455;
havoc addedValue_s15455;
havoc __ret_0_upAllowance;
havoc spender_s16608;
havoc subtractedValue_s16608;
havoc __ret_0_downAllowance;
havoc amount_s17756;
havoc account_s18948;
havoc amount_s18948;
havoc tmpNow;
tmpNow := now;
havoc now;
assume ((now) > (tmpNow));
assume ((msgsender_MSG) != (null));
assume ((DType[msgsender_MSG]) != (IERC20));
assume ((DType[msgsender_MSG]) != (SafeMath));
assume ((DType[msgsender_MSG]) != (ERC20Detailed));
assume ((DType[msgsender_MSG]) != (ZumToken));
assume ((DType[msgsender_MSG]) != (VeriSol));
Alloc[msgsender_MSG] := true;
if ((choice) == (15)) {
call __ret_0_totalSupply := totalSupply_ZumToken(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (14)) {
call __ret_0_balanceOf := balanceOf_ZumToken(this, msgsender_MSG, msgvalue_MSG, owner_s938);
} else if ((choice) == (13)) {
call __ret_0_allowance := allowance_ZumToken(this, msgsender_MSG, msgvalue_MSG, owner_s954, spender_s954);
} else if ((choice) == (12)) {
call __ret_0_transfer := transfer_ZumToken(this, msgsender_MSG, msgvalue_MSG, to_s4483, value_s4483);
} else if ((choice) == (11)) {
call __ret_0_approve := approve_ZumToken(this, msgsender_MSG, msgvalue_MSG, spender_s8727, value_s8727);
} else if ((choice) == (10)) {
call __ret_0_transferFrom := transferFrom_ZumToken(this, msgsender_MSG, msgvalue_MSG, from_s14302, to_s14302, value_s14302);
} else if ((choice) == (9)) {
call __ret_0_name := name_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (8)) {
call __ret_0_symbol := symbol_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (7)) {
call __ret_0_decimals := decimals_ERC20Detailed(this, msgsender_MSG, msgvalue_MSG);
} else if ((choice) == (6)) {
call __ret_0_cut := cut_ZumToken(this, msgsender_MSG, msgvalue_MSG, value_s981);
} else if ((choice) == (5)) {
call receivers_s5618 := FreshRefGenerator();
call amounts_s5618 := FreshRefGenerator();
call multiTransfer_ZumToken(this, msgsender_MSG, msgvalue_MSG, receivers_s5618, amounts_s5618);
} else if ((choice) == (4)) {
call __ret_0_upAllowance := upAllowance_ZumToken(this, msgsender_MSG, msgvalue_MSG, spender_s15455, addedValue_s15455);
} else if ((choice) == (3)) {
call __ret_0_downAllowance := downAllowance_ZumToken(this, msgsender_MSG, msgvalue_MSG, spender_s16608, subtractedValue_s16608);
} else if ((choice) == (2)) {
call destroy_ZumToken(this, msgsender_MSG, msgvalue_MSG, amount_s17756);
} else if ((choice) == (1)) {
call destroyFrom_ZumToken(this, msgsender_MSG, msgvalue_MSG, account_s18948, amount_s18948);
}
}
}


